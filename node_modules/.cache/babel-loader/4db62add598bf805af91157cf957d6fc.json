{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/Programming/Practicum/react-around-auth/src/components/App.js\";\nimport React from 'react';\nimport { Route, Switch, NavLink, useRouteMatch, useParams, Redirect } from 'react-router-dom';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip';\nimport * as auth from '../utils/auth.js';\n\nfunction App() {\n  // State variable fot the current user's info\n  const [currentUser, setCurrentUser] = React.useState({}); // The effect hook with an empty second parameter will update once upon mounting,\n  // i.e. one update after the API call\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getAuth(jwt).then(res => {\n        if (res) {\n          setIsLoggedIn(true);\n        }\n      });\n    }\n  }, []); // Declaration of three hooks that act as state variables for the visibility of each form\n\n  const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n  const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n  const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = React.useState(false);\n  const [regSuccess, setRegSuccess] = React.useState(false); // Selected card hook for state of Image Popup\n\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfileOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlaceOpen(true);\n  }\n\n  function handleAuthRegClick(result) {\n    setRegSuccess(result);\n    setIsInfoToolTipOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarOpen(false);\n    setIsEditProfileOpen(false);\n    setIsAddPlaceOpen(false);\n    setIsInfoToolTipOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(newInfo) {\n    api.patchUserInfo(newInfo).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.patchUserPic(avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Card variables and functions\n  // Declaration of hooks that act as state variables for cards\n\n\n  const [cards, setCards] = React.useState([]); // Effect hook for updating of user info and cards\n\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.likeCard(card, isLiked).then(res => {\n      const newCards = cards.map(c => c._id === card._id ? res : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  }\n\n  function handleAddPlace(card) {\n    api.addNewCard(card).then(res => {\n      const newCards = [...cards, res];\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    component: Main,\n    loggedIn: isLoggedIn,\n    userEmail: isLoggedIn,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onEditAvatar: handleEditAvatarClick,\n    onCardClick: handleCardClick,\n    onClose: closeAllPopups,\n    cards: cards,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onClick: handleAuthRegClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onClick: handleAuthRegClick,\n    setUser: setIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(InfoToolTip, {\n    isOpen: isInfoToolTipOpen,\n    success: regSuccess,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfileOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlaceOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"form-delete\",\n    title: \"Are you sure?\",\n    isOpen: null,\n    btnText: \"Yes\",\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/react-around-auth/src/components/App.js"],"names":["React","Route","Switch","NavLink","useRouteMatch","useParams","Redirect","Main","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Register","Login","InfoToolTip","auth","App","currentUser","setCurrentUser","useState","useEffect","getUserInfo","then","res","catch","err","console","log","isLoggedIn","setIsLoggedIn","jwt","localStorage","getItem","getAuth","isEditProfileOpen","setIsEditProfileOpen","isAddPlaceOpen","setIsAddPlaceOpen","isEditAvatarOpen","setIsEditAvatarOpen","isInfoToolTipOpen","setIsInfoToolTipOpen","regSuccess","setRegSuccess","selectedCard","setSelectedCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleAuthRegClick","result","closeAllPopups","handleCardClick","card","handleUpdateUser","newInfo","patchUserInfo","handleUpdateAvatar","avatar","patchUserPic","cards","setCards","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","likeCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleAddPlace","addNewCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, NavLink, useRouteMatch, useParams, Redirect } from 'react-router-dom';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip'\nimport * as auth from '../utils/auth.js';\n\nfunction App() {\n\n    // State variable fot the current user's info\n    const [currentUser, setCurrentUser] = React.useState({});\n    // The effect hook with an empty second parameter will update once upon mounting,\n    // i.e. one update after the API call\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((res) => { setCurrentUser(res); })\n            .catch((err) => { console.log(err) });\n    }, []);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getAuth(jwt).then((res) => {\n                if (res) {\n                    setIsLoggedIn(true);\n                    \n                }\n            });\n        }\n        \n    }, []);\n\n    // Declaration of three hooks that act as state variables for the visibility of each form\n    const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n    const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false);\n    const [isInfoToolTipOpen, setIsInfoToolTipOpen] = React.useState(false);\n    const [regSuccess, setRegSuccess] = React.useState(false);\n\n    // Selected card hook for state of Image Popup\n    const [selectedCard, setSelectedCard] = React.useState(null);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfileOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlaceOpen(true);\n    }\n\n    function handleAuthRegClick(result) {\n        setRegSuccess(result);\n        setIsInfoToolTipOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarOpen(false);\n        setIsEditProfileOpen(false);\n        setIsAddPlaceOpen(false);\n        setIsInfoToolTipOpen(false);\n        setSelectedCard(null);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleUpdateUser(newInfo) {\n        api.patchUserInfo(newInfo)\n            .then((res) => { setCurrentUser(res) })\n            .catch((err) => { console.log(err) });\n    }\n\n    function handleUpdateAvatar(avatar) {\n        api.patchUserPic(avatar)\n            .then((res) => { setCurrentUser(res) })\n            .catch((err) => { console.log(err) });\n    }\n\n    // Card variables and functions\n\n    // Declaration of hooks that act as state variables for cards\n    const [cards, setCards] = React.useState([]);\n\n    // Effect hook for updating of user info and cards\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((res) => { setCards(res); })\n            .catch((err) => { console.log(err) });\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.likeCard(card, isLiked)\n            .then((res) => {\n                const newCards = cards.map((c) => c._id === card._id ? res : c);\n                setCards(newCards);\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            });\n    }\n\n    function handleAddPlace(card) {\n        api.addNewCard(card)\n            .then((res) => {\n                const newCards = [...cards, res];\n                setCards(newCards);\n            });\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Switch>\n                <ProtectedRoute exact path=\"/\" component={Main} loggedIn={isLoggedIn} userEmail={isLoggedIn} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick} onClose={closeAllPopups} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n                <Route path='/signup'>\n                    <Register onClick={handleAuthRegClick} />\n                </Route>\n                <Route path='/signin'>\n                    <Login onClick={handleAuthRegClick} setUser={setIsLoggedIn} />\n                </Route>\n                <Route path='*'>\n                    <Redirect to=\"/signin\" />\n                </Route>\n            </Switch>\n            \n            {/* Popup ToolTip for Registration/Login */}\n            <InfoToolTip isOpen={isInfoToolTipOpen} success={regSuccess} onClose={closeAllPopups} />    \n\n            {/* Popup Edit User Info Form */}\n            <EditProfilePopup isOpen={isEditProfileOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n            {/* Popup Edit User Pic Form */}\n            <EditAvatarPopup isOpen={isEditAvatarOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n            {/* Popup Add Form */}\n            <AddPlacePopup isOpen={isAddPlaceOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\n\n            {/* Popup Delete Form */}\n            <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={closeAllPopups} />\n\n            {/* Image Popup */}\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}