{"ast":null,"code":"import _classCallCheck from\"/Users/william/Documents/Programming/Practicum/react-around-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/william/Documents/Programming/Practicum/react-around-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";// ###########################  API Class  ########################################################\nvar Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.options=options;}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(token){return fetch(\"\".concat(this.options.baseUrl,\"/user\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"patchUserInfo\",value:function patchUserInfo(_ref){var newName=_ref.name,newAbout=_ref.about;return fetch(\"\".concat(this.options.baseUrl,\"/user/me\"),{method:\"PATCH\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers,body:JSON.stringify({name:newName,about:newAbout})}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"patchUserPic\",value:function patchUserPic(_ref2){var newUrl=_ref2.avatar;return fetch(\"\".concat(this.options.baseUrl,\"/user/me/avatar\"),{method:\"PATCH\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers,body:JSON.stringify({avatar:newUrl})}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"getInitialCards\",value:function getInitialCards(token){return fetch(\"\".concat(this.options.baseUrl,\"/cards\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){if(res.ok){return res.json().data;}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"addNewCard\",value:function addNewCard(_ref3){var newName=_ref3.name,newLink=_ref3.link;return fetch(\"\".concat(this.options.baseUrl,\"/cards\"),{method:\"POST\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers,body:JSON.stringify({name:newName,link:newLink})}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this.options.baseUrl,\"/cards/\").concat(cardId),{method:\"DELETE\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}},{key:\"likeCard\",value:function likeCard(cardData,isLiked){// If the card is already liked by the user, the like is removed, else a like is added\nif(isLiked){return fetch(\"\".concat(this.options.baseUrl,\"/cards/likes/\").concat(cardData._id),{method:\"DELETE\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}else{return fetch(\"\".concat(this.options.baseUrl,\"/cards/likes/\").concat(cardData._id),{method:\"PUT\",credentials:\"include\",mode:\"no-cors\",headers:this.options.headers}).then(function(res){if(res.ok){return res.json();}else{return Promise.reject(\"Error: \".concat(res.status));}});}}}]);return Api;}();var api=new Api({baseUrl:\"https://api.ws.p15.students.nomoreparties.site\",headers:{\"Content-Type\":\"application/json\"}});// const api = new Api({\n//     baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n//     headers: {\n//         authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n//         \"Content-Type\": \"application/json\"\n//     }\n// });\nexport default api;","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/react-around-auth/src/utils/api.js"],"names":["Api","options","token","fetch","baseUrl","method","headers","then","res","ok","json","Promise","reject","status","newName","name","newAbout","about","credentials","mode","body","JSON","stringify","newUrl","avatar","data","newLink","link","cardId","cardData","isLiked","_id","api"],"mappings":"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","sourcesContent":["// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    getUserInfo(token) {\n        return fetch(`${this.options.baseUrl}/user`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout }) {\n        return fetch(`${this.options.baseUrl}/user/me`, {\n            method: \"PATCH\",\n            credentials: \"include\",\n            mode: \"no-cors\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, about: newAbout })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl }) {\n        return fetch(`${this.options.baseUrl}/user/me/avatar`, {\n            method: \"PATCH\",\n            credentials: \"include\",\n            mode: \"no-cors\",\n            headers: this.options.headers,\n            body: JSON.stringify({ avatar: newUrl })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards(token) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json().data;\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n    \n    addNewCard({ name: newName, link: newLink }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            credentials: \"include\",\n            mode: \"no-cors\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            credentials: \"include\",\n            mode: \"no-cors\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard(cardData, isLiked) {\n        // If the card is already liked by the user, the like is removed, else a like is added\n        if (isLiked) {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"DELETE\",\n                credentials: \"include\",\n                mode: \"no-cors\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"PUT\",\n                credentials: \"include\",\n                mode: \"no-cors\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n        \n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://api.ws.p15.students.nomoreparties.site\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n});\n\n// const api = new Api({\n//     baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n//     headers: {\n//         authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n//         \"Content-Type\": \"application/json\"\n//     }\n// });\n\nexport default api;"]},"metadata":{},"sourceType":"module"}