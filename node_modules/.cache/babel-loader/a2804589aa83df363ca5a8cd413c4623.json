{"ast":null,"code":"// ###########################  API Class  ########################################################\nclass Api {\n  constructor(options) {\n    this.options = options;\n  }\n\n  getUserInfo() {\n    return fetch(`${this.options.baseUrl}/users/me`, {\n      headers: this.options.headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  patchUserInfo({\n    name: newName,\n    about: newAbout\n  }) {\n    return fetch(`${this.options.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.options.headers,\n      body: JSON.stringify({\n        name: newName,\n        about: newAbout\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  patchUserPic({\n    avatar: newUrl\n  }) {\n    return fetch(`${this.options.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.options.headers,\n      body: JSON.stringify({\n        avatar: newUrl\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this.options.baseUrl}/cards`, {\n      headers: this.options.headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  addNewCard({\n    name: newName,\n    link: newLink\n  }) {\n    return fetch(`${this.options.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.options.headers,\n      body: JSON.stringify({\n        name: newName,\n        link: newLink\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.options.headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  likeCard(cardData, userId) {\n    if (cardData.likes.some(like => {\n      return like._id === userId;\n    })) {\n      return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n        method: \"DELETE\",\n        headers: this.options.headers\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return Promise.reject(`Error: ${res.status}`);\n        }\n      });\n    } else {\n      return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n        method: \"PUT\",\n        headers: this.options.headers\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return Promise.reject(`Error: ${res.status}`);\n        }\n      });\n    }\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this.options.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.options.headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/project-10-11-react/src/utils/api.js"],"names":["Api","constructor","options","getUserInfo","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","patchUserInfo","name","newName","about","newAbout","method","body","JSON","stringify","patchUserPic","avatar","newUrl","getInitialCards","addNewCard","link","newLink","deleteCard","cardId","likeCard","cardData","userId","likes","some","like","_id","unlikeCard","api","authorization"],"mappings":"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","sourcesContent":["// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    getUserInfo() {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout }) {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, about: newAbout })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl }) {\n        return fetch(`${this.options.baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ avatar: newUrl })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards() {\n        return fetch(`${this.options.baseUrl}/cards`, {\n          headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n    \n    addNewCard({ name: newName, link: newLink }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard(cardData, userId) {\n        \n        if (cardData.likes.some((like) => {return (like._id === userId);})) {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"DELETE\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"PUT\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n        \n    }\n\n    unlikeCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/likes/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}