{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/Programming/Practicum/react-around-auth/src/components/App.js\";\nimport React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip';\nimport * as auth from '../utils/auth.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: null,\n      userEmail: '',\n      currentUser: {},\n      isEditProfileOpen: false,\n      isAddPlaceOpen: false,\n      isEditAvatarOpen: false,\n      isInfoToolTipOpen: false,\n      regSuccess: false,\n      selectedCard: null,\n      cards: []\n    };\n    this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n    this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n    this.handleAddPlaceClick = this.handleAddPlaceClick.bind(this);\n    this.handleAuthRegClick = this.handleAuthRegClick.bind(this);\n    this.closeAllPopups = this.closeAllPopups.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n    this.handleUpdateUser = this.handleUpdateUser.bind(this);\n    this.handleUpdateAvatar = this.handleUpdateAvatar.bind(this);\n    this.handleCardLike = this.handleCardLike.bind(this);\n    this.handleCardDelete = this.handleCardDelete.bind(this);\n    this.handleAddPlace = this.handleAddPlace.bind(this);\n    this.handleSetLoggedIn = this.handleSetLoggedIn.bind(this);\n  }\n\n  componentDidMount() {\n    // Get user info for profile section\n    api.getUserInfo().then(res => {\n      this.setState({\n        currentUser: res\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // Get initial cards\n\n    api.getInitialCards().then(res => {\n      this.setState({\n        cards: res\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // Check if user has jwt token\n\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getUser(jwt).then(res => {\n        if (res) {\n          this.setState({\n            isLoggedIn: true,\n            userEmail: res.data.email\n          });\n        }\n      }).then(() => {\n        this.props.history.push('/');\n        ;\n      });\n    }\n  }\n\n  handleSetLoggedIn({\n    loggedIn,\n    email\n  }) {\n    this.setState({\n      isLoggedIn: loggedIn,\n      userEmail: email\n    });\n  }\n\n  handleLogOut() {\n    localStorage.removeItem('jwt');\n    this.handleSetLoggedIn({\n      loggedIn: false,\n      email: null\n    });\n  }\n\n  handleEditAvatarClick() {\n    this.setState({\n      isEditAvatarOpen: true\n    });\n  }\n\n  handleEditProfileClick() {\n    this.setState({\n      isEditProfileOpen: true\n    });\n  }\n\n  handleAddPlaceClick() {\n    this.setState({\n      isAddPlaceOpen: true\n    });\n  }\n\n  handleAuthRegClick(result) {\n    this.setState({\n      regSuccess: result,\n      isInfoToolTipOpen: true\n    });\n  }\n\n  closeAllPopups() {\n    this.setState({\n      isEditAvatarOpen: false,\n      isEditProfileOpen: false,\n      isAddPlaceOpen: false,\n      isInfoToolTipOpen: false,\n      selectedCard: null\n    });\n  }\n\n  handleCardClick(card) {\n    this.setState({\n      selectedCard: card\n    });\n  }\n\n  handleUpdateUser(newInfo) {\n    api.patchUserInfo(newInfo).then(res => {\n      this.setState({\n        currentUser: res\n      }, this.closeAllPopups());\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleUpdateAvatar(avatar) {\n    api.patchUserPic(avatar).then(res => {\n      this.setState({\n        currentUser: res\n      }, this.closeAllPopups());\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === this.state.currentUser._id);\n    api.likeCard(card, isLiked).then(res => {\n      const newCards = this.state.cards.map(c => c._id === card._id ? res : c);\n      this.setState({\n        cards: newCards\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = this.state.cards.filter(c => c._id !== card._id);\n      this.setState({\n        cards: newCards\n      });\n    });\n  }\n\n  handleAddPlace(card) {\n    api.addNewCard(card).then(res => {\n      const newCards = [...this.state.cards, res];\n      this.setState({\n        cards: newCards\n      }, this.closeAllPopups());\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n      value: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n      exact: true,\n      path: \"/\",\n      component: Main,\n      loggedIn: this.state.isLoggedIn,\n      userEmail: this.state.userEmail,\n      onEditProfile: this.handleEditProfileClick,\n      onAddPlace: this.handleAddPlaceClick,\n      onEditAvatar: this.handleEditAvatarClick,\n      onCardClick: this.handleCardClick,\n      onClose: this.closeAllPopups,\n      cards: this.state.cards,\n      onCardLike: this.handleCardLike,\n      onCardDelete: this.handleCardDelete,\n      setLoggedIn: this.handleSetLoggedIn,\n      logOut: this.handleLogOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      onClick: this.handleAuthRegClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      onClick: this.handleAuthRegClick,\n      setLoggedIn: this.handleSetLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(InfoToolTip, {\n      isOpen: this.state.isInfoToolTipOpen,\n      success: this.state.regSuccess,\n      onClose: this.closeAllPopups,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n      isOpen: this.state.isEditProfileOpen,\n      onClose: this.closeAllPopups,\n      onUpdateUser: this.handleUpdateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n      isOpen: this.state.isEditAvatarOpen,\n      onClose: this.closeAllPopups,\n      onUpdateAvatar: this.handleUpdateAvatar,\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n      isOpen: this.state.isAddPlaceOpen,\n      onClose: this.closeAllPopups,\n      onAddPlace: this.handleAddPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PopupWithForm, {\n      name: \"form-delete\",\n      title: \"Are you sure?\",\n      isOpen: null,\n      btnText: \"Yes\",\n      onClose: this.closeAllPopups,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ImagePopup, {\n      card: this.state.selectedCard,\n      onClose: this.closeAllPopups,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/react-around-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","withRouter","Main","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Register","Login","InfoToolTip","auth","App","Component","constructor","state","isLoggedIn","userEmail","currentUser","isEditProfileOpen","isAddPlaceOpen","isEditAvatarOpen","isInfoToolTipOpen","regSuccess","selectedCard","cards","handleEditAvatarClick","bind","handleEditProfileClick","handleAddPlaceClick","handleAuthRegClick","closeAllPopups","handleCardClick","handleUpdateUser","handleUpdateAvatar","handleCardLike","handleCardDelete","handleAddPlace","handleSetLoggedIn","componentDidMount","getUserInfo","then","res","setState","catch","err","console","log","getInitialCards","jwt","localStorage","getItem","getUser","data","email","props","history","push","loggedIn","handleLogOut","removeItem","result","card","newInfo","patchUserInfo","avatar","patchUserPic","isLiked","likes","some","i","_id","likeCard","newCards","map","c","deleteCard","filter","addNewCard","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip'\nimport * as auth from '../utils/auth.js';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            isLoggedIn: null,\n            userEmail: '',\n            currentUser: {},\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isEditAvatarOpen: false,\n            isInfoToolTipOpen: false,\n            regSuccess: false,\n            selectedCard: null,\n            cards: [],\n        };\n        this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n        this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n        this.handleAddPlaceClick = this.handleAddPlaceClick.bind(this);\n        this.handleAuthRegClick = this.handleAuthRegClick.bind(this);\n        this.closeAllPopups = this.closeAllPopups.bind(this);\n        this.handleCardClick = this.handleCardClick.bind(this);\n        this.handleUpdateUser = this.handleUpdateUser.bind(this);\n        this.handleUpdateAvatar = this.handleUpdateAvatar.bind(this);\n        this.handleCardLike = this.handleCardLike.bind(this);\n        this.handleCardDelete = this.handleCardDelete.bind(this);\n        this.handleAddPlace= this.handleAddPlace.bind(this);\n        this.handleSetLoggedIn = this.handleSetLoggedIn.bind(this);\n    }\n\n    componentDidMount() {\n        // Get user info for profile section\n        api.getUserInfo().then((res) => { \n            this.setState({ currentUser: res}); \n        }).catch((err) => { \n            console.log(err) \n        });\n        \n        // Get initial cards\n        api.getInitialCards().then((res) => { \n            this.setState({ cards: res}); \n        }).catch((err) => { \n            console.log(err) \n        });\n\n        // Check if user has jwt token\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getUser(jwt).then((res) => {\n                if (res) {\n                    this.setState({ \n                        isLoggedIn: true,\n                        userEmail: res.data.email\n                    });\n                }\n            }).then(() => {\n                this.props.history.push('/'); ;\n            });\n        }   \n    }\n\n    handleSetLoggedIn({loggedIn, email}) {\n        this.setState({\n            isLoggedIn: loggedIn,\n            userEmail: email\n        })\n    }\n\n    handleLogOut() {\n        localStorage.removeItem('jwt');\n        this.handleSetLoggedIn({ loggedIn: false, email: null });\n    }\n\n    handleEditAvatarClick() {\n        this.setState({ isEditAvatarOpen: true });\n    }\n\n    handleEditProfileClick() {\n        this.setState({ isEditProfileOpen: true });\n    }\n\n    handleAddPlaceClick() {\n        this.setState({ isAddPlaceOpen: true });\n    }\n\n    handleAuthRegClick(result) {\n        this.setState({\n            regSuccess: result,\n            isInfoToolTipOpen: true\n        });\n    }\n\n    closeAllPopups() {\n        this.setState({\n            isEditAvatarOpen: false,\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isInfoToolTipOpen: false,\n            selectedCard: null\n        });\n    }\n\n    handleCardClick(card) {\n        this.setState({ selectedCard: card });\n    }\n\n    handleUpdateUser(newInfo) {\n        api.patchUserInfo(newInfo)\n            .then((res) => { this.setState({ currentUser: res }, this.closeAllPopups())})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleUpdateAvatar(avatar) {\n        api.patchUserPic(avatar)\n            .then((res) => { this.setState({ currentUser: res }, this.closeAllPopups())})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === this.state.currentUser._id);\n        api.likeCard(card, isLiked)\n            .then((res) => {\n                const newCards = this.state.cards.map((c) => c._id === card._id ? res : c);\n                this.setState({ cards: newCards });\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = this.state.cards.filter((c) => c._id !== card._id);\n                this.setState({ cards: newCards });\n            });\n    }\n\n    handleAddPlace(card) {\n        api.addNewCard(card)\n            .then((res) => {\n                const newCards = [...this.state.cards, res];\n                this.setState({ cards: newCards }, this.closeAllPopups());\n                ;\n            });\n        \n    }\n\n    render() {\n        return (\n            <CurrentUserContext.Provider value={this.state.currentUser}>\n                <Switch>\n                    <ProtectedRoute exact path=\"/\" component={Main} loggedIn={this.state.isLoggedIn} userEmail={this.state.userEmail} \n                        onEditProfile={this.handleEditProfileClick} onAddPlace={this.handleAddPlaceClick} onEditAvatar={this.handleEditAvatarClick}\n                        onCardClick={this.handleCardClick} onClose={this.closeAllPopups} cards={this.state.cards} onCardLike={this.handleCardLike} \n                        onCardDelete={this.handleCardDelete} setLoggedIn={this.handleSetLoggedIn} logOut={this.handleLogOut} />\n                    <Route path='/signup'>\n                        <Register onClick={this.handleAuthRegClick} />\n                    </Route>\n                    <Route path='/signin'>\n                        <Login onClick={this.handleAuthRegClick} setLoggedIn={this.handleSetLoggedIn} />\n                    </Route>\n                    <Route path='*'>\n                        <Redirect to=\"/signin\" />\n                    </Route>\n                </Switch>\n                \n                {/* Popup ToolTip for Registration/Login */}\n                <InfoToolTip isOpen={this.state.isInfoToolTipOpen} success={this.state.regSuccess} onClose={this.closeAllPopups} />    \n\n                {/* Popup Edit User Info Form */}\n                <EditProfilePopup isOpen={this.state.isEditProfileOpen} onClose={this.closeAllPopups} onUpdateUser={this.handleUpdateUser} />\n\n                {/* Popup Edit User Pic Form */}\n                <EditAvatarPopup isOpen={this.state.isEditAvatarOpen} onClose={this.closeAllPopups} onUpdateAvatar={this.handleUpdateAvatar} currentUser={this.state.currentUser} />\n\n                {/* Popup Add Form */}\n                <AddPlacePopup isOpen={this.state.isAddPlaceOpen} onClose={this.closeAllPopups} onAddPlace={this.handleAddPlace} />\n\n                {/* Popup Delete Form */}\n                <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={this.closeAllPopups} />\n\n                {/* Image Popup */}\n                <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups} />\n\n            </CurrentUserContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}