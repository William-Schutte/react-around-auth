{"ast":null,"code":"//const BASE_URL = 'https://register.nomoreparties.co';\nconst BASE_URL = 'https://api.ws.p15.students.nomoreparties.site';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"name\": \"Name\",\n      \"about\": \"About me\",\n      \"avatar\": \"https://icon-library.com/images/default-user-icon/default-user-icon-6.jpg\",\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => {\n    if (res.status === 201) {\n      return res.json();\n    } else {\n      throw new Error('Unsuccessful registration');\n    }\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => {\n    if (res.status === 201) {\n      return res.json();\n    } else {\n      throw new Error('Unsuccessful login');\n    }\n  }).then(data => {\n    localStorage.setItem('jwt', data.token);\n    return true;\n  });\n};\nexport const getUser = token => {\n  return fetch(`${BASE_URL}/user`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  });\n};","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/react-around-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","Error","authorize","data","localStorage","setItem","token","getUser"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,gDAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,cAAQ,MAAV;AAAkB,eAAS,UAA3B;AAAuC,gBAAU,2EAAjD;AAA8H,kBAAYN,QAA1I;AAAoJ,eAASD;AAA7J,KAAf;AALyB,GAAvB,CAAL,CAMJQ,IANI,CAMEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;AACJ,GAZM,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMC,SAAS,GAAG,CAACb,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,kBAAYN,QAAd;AAAwB,eAASD;AAAjC,KAAf;AALyB,GAAvB,CAAL,CAMJQ,IANI,CAMEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACH;AACJ,GAZM,EAYJJ,IAZI,CAYEM,IAAD,IAAU;AACdC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,KAAjC;AACA,WAAO,IAAP;AACH,GAfM,CAAP;AAgBH,CAjBM;AAmBP,OAAO,MAAMC,OAAO,GAAID,KAAD,IAAW;AAC9B,SAAOf,KAAK,CAAE,GAAEJ,QAAS,OAAb,EAAqB;AAC7BK,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASa,KAAM;AAF5B;AAFoB,GAArB,CAAL,CAMJT,IANI,CAMEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,GAVM,CAAP;AAWH,CAZM","sourcesContent":["//const BASE_URL = 'https://register.nomoreparties.co';\nconst BASE_URL = 'https://api.ws.p15.students.nomoreparties.site';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"name\": \"Name\", \"about\": \"About me\", \"avatar\": \"https://icon-library.com/images/default-user-icon/default-user-icon-6.jpg\", \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful registration');\n        }\n    });\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful login');\n        }\n    }).then((data) => {\n        localStorage.setItem('jwt', data.token);\n        return true;\n    });\n};\n\nexport const getUser = (token) => {\n    return fetch(`${BASE_URL}/user`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    }).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}