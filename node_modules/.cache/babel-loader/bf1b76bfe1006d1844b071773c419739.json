{"ast":null,"code":"//const BASE_URL = 'https://register.nomoreparties.co';\nvar BASE_URL='https://api.ws.p15.students.nomoreparties.site';export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"name\":\"Name\",\"about\":\"About me\",\"avatar\":\"https://icon-library.com/images/default-user-icon/default-user-icon-6.jpg\",\"password\":password,\"email\":email})}).then(function(res){if(res.status===201){return res.json();}else{throw new Error('Unsuccessful registration');}});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"password\":password,\"email\":email})}).then(function(res){return res.json();// if (res.status === 201) {\n//     return res.json();\n// } else {\n//     throw new Error('Unsuccessful login');\n// }\n}).then(function(data){localStorage.setItem('jwt',data.token);return true;});};export var getUser=function getUser(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){if(res.status===200){return res.json();}});};","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/react-around-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","Error","authorize","data","localStorage","setItem","token","getUser"],"mappings":"AAAA;AACA,GAAMA,CAAAA,QAAQ,CAAG,gDAAjB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAE,OAAQ,MAAV,CAAkB,QAAS,UAA3B,CAAuC,SAAU,2EAAjD,CAA8H,WAAYN,QAA1I,CAAoJ,QAASD,KAA7J,CAAf,CALyB,CAAvB,CAAL,CAMJQ,IANI,CAMC,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAFD,IAEO,CACH,KAAM,IAAIC,CAAAA,KAAJ,CAAU,2BAAV,CAAN,CACH,CACJ,CAZM,CAAP,CAaH,CAdM,CAgBP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACb,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAE,WAAYN,QAAd,CAAwB,QAASD,KAAjC,CAAf,CALyB,CAAvB,CAAL,CAMJQ,IANI,CAMC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAG,CAACE,IAAJ,EAAP,CAEA;AACA;AACA;AACA;AACA;AACH,CAdM,EAcJH,IAdI,CAcC,SAACM,IAAD,CAAU,CACdC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BF,IAAI,CAACG,KAAjC,EACA,MAAO,KAAP,CACH,CAjBM,CAAP,CAkBH,CAnBM,CAqBP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACD,KAAD,CAAW,CAC9B,MAAOf,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACjCK,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2Ba,KAA3B,CAFK,CAFwB,CAAzB,CAAL,CAMJT,IANI,CAMC,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CAVM,CAAP,CAWH,CAZM","sourcesContent":["//const BASE_URL = 'https://register.nomoreparties.co';\nconst BASE_URL = 'https://api.ws.p15.students.nomoreparties.site';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"name\": \"Name\", \"about\": \"About me\", \"avatar\": \"https://icon-library.com/images/default-user-icon/default-user-icon-6.jpg\", \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful registration');\n        }\n    });\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"password\": password, \"email\": email })\n    }).then((res) => {\n        return res.json();\n\n        // if (res.status === 201) {\n        //     return res.json();\n        // } else {\n        //     throw new Error('Unsuccessful login');\n        // }\n    }).then((data) => {\n        localStorage.setItem('jwt', data.token)\n        return true;\n    });\n};\n\nexport const getUser = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    }).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}