{"ast":null,"code":"var _jsxFileName = \"/Users/william/Documents/Programming/Practicum/project-10-11-react/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\n\nfunction App() {\n  // State variable fot the current user's info\n  const [currentUser, setCurrentUser] = React.useState({}); // The effect hook with an empty second parameter will update once upon mounting,\n  // i.e. one update after the API call\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Declaration of three hooks that act as state variables for the visibility of each form\n\n  const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n  const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n  const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false); // Selected card hook for state of Image Popup\n\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfileOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlaceOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarOpen(false);\n    setIsEditProfileOpen(false);\n    setIsAddPlaceOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(newInfo) {\n    api.patchUserInfo(newInfo).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.patchUserPic(avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Card variables and functions\n  // Declaration of hooks that act as state variables for cards\n\n\n  const [cards, setCards] = React.useState([]); // Effect hook for updating of user info and cards\n\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.likeCard(card, isLiked).then(res => {\n      const newCards = cards.map(c => c._id === card._id ? res : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onEditAvatar: handleEditAvatarClick,\n    onCardClick: handleCardClick,\n    onClose: closeAllPopups,\n    cards: cards,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfileOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"form-add\",\n    title: \"New place\",\n    isOpen: isAddPlaceOpen,\n    btnText: \"Create\",\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"form-place\",\n    name: \"primary\",\n    className: \"form__place form__input\",\n    type: \"text\",\n    placeholder: \"Title\",\n    required: true,\n    minLength: \"1\",\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"form-place-error\",\n    className: \"form__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"form-url\",\n    name: \"secondary\",\n    className: \"form__url form__input\",\n    type: \"url\",\n    placeholder: \"Image link\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"form-url-error\",\n    className: \"form__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"form-delete\",\n    title: \"Are you sure?\",\n    isOpen: null,\n    btnText: \"Yes\",\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/william/Documents/Programming/Practicum/project-10-11-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","App","currentUser","setCurrentUser","useState","useEffect","getUserInfo","then","res","catch","err","console","log","isEditProfileOpen","setIsEditProfileOpen","isAddPlaceOpen","setIsAddPlaceOpen","isEditAvatarOpen","setIsEditAvatarOpen","selectedCard","setSelectedCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleUpdateUser","newInfo","patchUserInfo","handleUpdateAvatar","avatar","patchUserPic","cards","setCards","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","likeCard","newCards","map","c","handleCardDelete","deleteCard","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,SAASC,GAAT,GAAe;AAEX;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC,CAHW,CAIX;AACA;;AACAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClBR,IAAAA,GAAG,CAACS,WAAJ,GACKC,IADL,CACWC,GAAD,IAAS;AAACL,MAAAA,cAAc,CAACK,GAAD,CAAd;AAAqB,KADzC,EAEKC,KAFL,CAEYC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFtC;AAGH,GAJD,EAIG,EAJH,EANW,CAaX;;AACA,QAAM,CAACG,iBAAD,EAAoBC,oBAApB,IAA4CvB,KAAK,CAACa,QAAN,CAAe,KAAf,CAAlD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCzB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0C3B,KAAK,CAACa,QAAN,CAAe,KAAf,CAAhD,CAhBW,CAkBX;;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkC7B,KAAK,CAACa,QAAN,CAAe,IAAf,CAAxC;;AAEA,WAASiB,qBAAT,GAAiC;AAC7BH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;;AAED,WAASI,sBAAT,GAAkC;AAC9BR,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH;;AAED,WAASS,mBAAT,GAA+B;AAC3BP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;;AAED,WAASQ,cAAT,GAA0B;AACtBN,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH;;AAED,WAASK,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BN,IAAAA,eAAe,CAACM,IAAD,CAAf;AACH;;AAED,WAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/B/B,IAAAA,GAAG,CAACgC,aAAJ,CAAkBD,OAAlB,EACKrB,IADL,CACWC,GAAD,IAAS;AAACL,MAAAA,cAAc,CAACK,GAAD,CAAd;AAAoB,KADxC,EAEKC,KAFL,CAEYC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFtC;AAGH;;AAED,WAASoB,kBAAT,CAA4BC,MAA5B,EAAoC;AAChClC,IAAAA,GAAG,CAACmC,YAAJ,CAAiBD,MAAjB,EACKxB,IADL,CACWC,GAAD,IAAS;AAACL,MAAAA,cAAc,CAACK,GAAD,CAAd;AAAoB,KADxC,EAEKC,KAFL,CAEYC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFtC;AAGH,GAtDU,CAwDX;AAEA;;;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoB3C,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1B,CA3DW,CA6DX;;AACAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClBR,IAAAA,GAAG,CAACsC,eAAJ,GACK5B,IADL,CACWC,GAAD,IAAS;AAAC0B,MAAAA,QAAQ,CAAC1B,GAAD,CAAR;AAAe,KADnC,EAEKC,KAFL,CAEYC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFtC;AAGH,GAJD,EAIG,EAJH;;AAMA,WAAS0B,cAAT,CAAwBV,IAAxB,EAA8B;AAC1B,UAAMW,OAAO,GAAGX,IAAI,CAACY,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUvC,WAAW,CAACuC,GAA3C,CAAhB;AACA5C,IAAAA,GAAG,CAAC6C,QAAJ,CAAahB,IAAb,EAAmBW,OAAnB,EACK9B,IADL,CACWC,GAAD,IAAS;AACX,YAAMmC,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUf,IAAI,CAACe,GAAf,GAAqBjC,GAArB,GAA2BqC,CAA5C,CAAjB;AACAX,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACH,KAJL,EAKKlC,KALL,CAKYC,GAAD,IAAS;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,KALxC;AAMH;;AAED,WAASoC,gBAAT,CAA0BpB,IAA1B,EAAgC;AAC5B7B,IAAAA,GAAG,CAACkD,UAAJ,CAAerB,IAAI,CAACe,GAApB,EACKlC,IADL,CACU,MAAM;AACR,YAAMoC,QAAQ,GAAGV,KAAK,CAACe,MAAN,CAAcH,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUf,IAAI,CAACe,GAAnC,CAAjB;AACAP,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACH,KAJL;AAKH;;AAED,sBACI,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEzC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAEoB,sBAArB;AAA6C,IAAA,UAAU,EAAEC,mBAAzD;AAA8E,IAAA,YAAY,EAAEF,qBAA5F;AACI,IAAA,WAAW,EAAEI,eADjB;AACkC,IAAA,OAAO,EAAED,cAD3C;AAC2D,IAAA,KAAK,EAAES,KADlE;AACyE,IAAA,UAAU,EAAEG,cADrF;AACqG,IAAA,YAAY,EAAEU,gBADnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAUI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEjC,iBAA1B;AAA6C,IAAA,OAAO,EAAEW,cAAtD;AAAsE,IAAA,YAAY,EAAEG,gBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAaI,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEV,gBAAzB;AAA2C,IAAA,OAAO,EAAEO,cAApD;AAAoE,IAAA,cAAc,EAAEM,kBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAgBI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,KAAK,EAAC,WAArC;AAAiD,IAAA,MAAM,EAAEf,cAAzD;AAAyE,IAAA,OAAO,EAAC,QAAjF;AAA0F,IAAA,OAAO,EAAES,cAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAsC,IAAA,SAAS,EAAC,yBAAhD;AAA0E,IAAA,IAAI,EAAC,MAA/E;AAAsF,IAAA,WAAW,EAAC,OAAlG;AAA0G,IAAA,QAAQ,MAAlH;AAAmH,IAAA,SAAS,EAAC,GAA7H;AAAiI,IAAA,SAAS,EAAC,IAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,EAAE,EAAC,kBAAT;AAA4B,IAAA,SAAS,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,WAA1B;AAAsC,IAAA,SAAS,EAAC,uBAAhD;AAAwE,IAAA,IAAI,EAAC,KAA7E;AAAmF,IAAA,WAAW,EAAC,YAA/F;AAA4G,IAAA,QAAQ,MAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,CAhBJ,eA4BI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,aAApB;AAAkC,IAAA,KAAK,EAAC,eAAxC;AAAwD,IAAA,MAAM,EAAE,IAAhE;AAAsE,IAAA,OAAO,EAAC,KAA9E;AAAoF,IAAA,OAAO,EAAEA,cAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,eA+BI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEL,YAAlB;AAAgC,IAAA,OAAO,EAAEK,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADJ;AAmCH;;AAED,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\n\nfunction App() {\n\n    // State variable fot the current user's info\n    const [currentUser, setCurrentUser] = React.useState({});\n    // The effect hook with an empty second parameter will update once upon mounting,\n    // i.e. one update after the API call\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((res) => {setCurrentUser(res);})\n            .catch((err) => {console.log(err)});\n    }, []);\n\n\n    // Declaration of three hooks that act as state variables for the visibility of each form\n    const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n    const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false);\n\n    // Selected card hook for state of Image Popup\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    \n    function handleEditAvatarClick() {\n        setIsEditAvatarOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfileOpen(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlaceOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarOpen(false);\n        setIsEditProfileOpen(false);\n        setIsAddPlaceOpen(false);\n        setSelectedCard(null);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleUpdateUser(newInfo) {\n        api.patchUserInfo(newInfo)\n            .then((res) => {setCurrentUser(res)})\n            .catch((err) => {console.log(err)});\n    }\n\n    function handleUpdateAvatar(avatar) {\n        api.patchUserPic(avatar)\n            .then((res) => {setCurrentUser(res)})\n            .catch((err) => {console.log(err)});\n    }\n\n    // Card variables and functions\n\n    // Declaration of hooks that act as state variables for cards\n    const [cards, setCards] = React.useState([]);\n\n    // Effect hook for updating of user info and cards\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((res) => {setCards(res);})\n            .catch((err) => {console.log(err)});\n    }, []);\n    \n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.likeCard(card, isLiked)\n            .then((res) => {\n                const newCards = cards.map((c) => c._id === card._id ? res : c);\n                setCards(newCards);\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            });\n    }\n    \n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            {/* Header section */}\n            <Header />\n            {/* Main content */}\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} \n                onCardClick={handleCardClick} onClose={closeAllPopups} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n            {/* Footer section */}\n            <Footer />\n\n            {/* Popup Edit User Info Form */}\n            <EditProfilePopup isOpen={isEditProfileOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n            {/* Popup Edit User Pic Form */}\n            <EditAvatarPopup isOpen={isEditAvatarOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n            {/* Popup Add Form */}   \n            <PopupWithForm name=\"form-add\" title=\"New place\" isOpen={isAddPlaceOpen} btnText=\"Create\" onClose={closeAllPopups}>\n                <label className=\"form__input-field\">\n                    <input id=\"form-place\" name=\"primary\" className=\"form__place form__input\" type=\"text\" placeholder=\"Title\" required minLength=\"1\" maxLength=\"30\" />\n                    <span id=\"form-place-error\" className=\"form__error\"></span>\n                </label>\n                <label className=\"form__input-field\">\n                    <input id=\"form-url\" name=\"secondary\" className=\"form__url form__input\" type=\"url\" placeholder=\"Image link\" required />\n                    <span id=\"form-url-error\" className=\"form__error\"></span>\n                </label>\n            </PopupWithForm>\n\n            {/* Popup Delete Form */}\n            <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={closeAllPopups} />\n\n            {/* Image Popup */}\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}