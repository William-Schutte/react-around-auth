{"version":3,"sources":["images/header-logo.svg","serviceWorker.js","contexts/CurrentUserContext.js","components/Card.js","components/Header.js","components/Footer.js","components/Main.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","components/Register.js","components/Login.js","components/InfoToolTip.js","utils/auth.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","owner","card","_id","cardDeleteButtonClasses","isLiked","likes","some","i","cardLikeButtonClasses","className","style","backgroundImage","link","onClick","onCardClick","type","aria-label","onCardDelete","name","onCardLike","length","Header","useState","innerWidth","width","setWidth","isMenuOpen","setIsMenuOpen","useEffect","handleResize","addEventListener","removeEventListener","userEmail","logOut","to","src","headerLogo","alt","linkText","linkTo","Footer","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","key","onClose","ImagePopup","api","options","this","token","fetch","baseUrl","method","headers","then","res","status","json","data","Promise","reject","newName","newAbout","body","JSON","stringify","newUrl","ok","newLink","cardId","PopupWithForm","isOpen","onSubmit","title","children","btnText","EditProfilePopup","setName","setDescription","description","e","preventDefault","onUpdateUser","id","value","onChange","target","required","minLength","maxLength","pattern","EditAvatarPopup","state","handleChange","bind","handleClose","handleSubmit","setState","onUpdateAvatar","prevProps","placeholder","Component","AddPlacePopup","url","setUrl","ProtectedRoute","component","loggedIn","Register","email","password","register","withRouter","Login","logIn","InfoToolTip","success","BASE_URL","App","isLoggedIn","jwt","isEditProfileOpen","isAddPlaceOpen","isEditAvatarOpen","isInfoToolTipOpen","regSuccess","selectedCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleAuthRegClick","closeAllPopups","handleCardClick","handleUpdateUser","handleUpdateAvatar","handleCardLike","handleCardDelete","handleAddPlace","handleLogIn","handleLogOut","handleRegister","localStorage","getItem","history","push","catch","err","console","log","getInitialCards","Error","setItem","user","auth","removeItem","result","newInfo","patchUserInfo","patchUserPic","likeCard","newCards","c","deleteCard","filter","addNewCard","Provider","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.93d9d13d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.8f7611ae.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Code to check if the card is owned by current user and determine the delete buttons visibility\n    const owner = props.card.owner === currentUser._id;\n    const cardDeleteButtonClasses = `card__delete-button ${owner ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`;\n\n    // Checks if the card was liked by the current user\n    const isLiked = props.card.likes.some(i => i === currentUser._id);\n    const cardLikeButtonClasses = `card__fav-button ${isLiked && 'card__fav-button_active'}`;\n    \n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n    function handleDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick} />\n            <button type=\"button\" aria-label=\"Card Delete Button\" className={cardDeleteButtonClasses} onClick={handleDeleteClick}></button>\n            <div className=\"card__overlay\">\n                <h2 className=\"card__name\">{props.card.name}</h2>\n                <div className=\"card__like-column\">\n                    <button type=\"button\" aria-label=\"Card Favorite Button\" className={cardLikeButtonClasses} onClick={handleLikeClick}></button>\n                    <p className=\"card__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport headerLogo from '../images/header-logo.svg';\n\nfunction Header(props) {\n\n    const MOBILE_WIDTH = 425;\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        function handleResize() {\n            setWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', handleResize);\n\n        return () => window.removeEventListener('resize', handleResize);\n    });\n    \n    const handleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    }\n\n    return (\n        <>\n            {isMenuOpen && \n            <header className=\"header header_menu\">\n                <p className=\"header__email\">{props.userEmail}</p>\n                <Link className=\"header__sign-out btn-animate\" onClick={props.logOut} to='/'>Log Out</Link>\n            </header>}\n\n            <header className=\"header\">\n                <img className=\"header__logo\" src={headerLogo} alt=\"Around the U.S. Logo\" />\n                {props.linkText && <Link className=\"header__link btn-animate\" to={props.linkTo}>{props.linkText}</Link>}\n                {(props.userEmail && width > MOBILE_WIDTH) && \n                    <>\n                        <p className=\"header__email\">{props.userEmail}</p>\n                        <Link className=\"header__sign-out btn-animate\" onClick={props.logOut} to='/'>Log Out</Link>\n                    </>}\n                {(props.userEmail && width <= MOBILE_WIDTH) && \n                    <>\n                        <button type=\"button\" className={`header__menu-btn btn-animate ${isMenuOpen ? `header__menu-btn_close` : `header__menu-btn_open`}`} onClick={handleMenu}></button>\n                    </>}\n            </header>\n        </>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <p className=\"footer__copyright\">&copy;2020 William Schutte. Around the U.S.</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport Card from './Card.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction Main(props) {\n\n    // Import of context value from provider\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <>\n        <Header userEmail={props.userEmail} logOut={props.logOut} />\n        <main className=\"content\">\n            {/* Profile section at top of page, contains three buttons for editing profile and cards */}\n            <section className=\"profile\">\n                <button type=\"button\" className=\"profile__pic-button\" onClick={props.onEditAvatar}></button>\n                <div className=\"profile__picture\" style={{ backgroundImage: `url(${currentUser.avatar})` }} alt=\"My Profile Pic\" />\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <p className=\"profile__occupation\">{currentUser.about}</p>\n                </div>\n                <button type=\"button\" aria-label=\"Edit Profile Button\" className=\"profile__edit-button btn-animate\" onClick={props.onEditProfile}></button>\n                <button type=\"button\" aria-label=\"Add Card Button\" className=\"profile__add-button btn-animate\" onClick={props.onAddPlace}></button>\n            </section>\n\n            {/* Image cards section, generated from server response */}\n            <section className=\"cards\">\n                <ul className=\"cards__container\">\n                    {props.cards.map(card => (\n                        <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} onClose={props.onClose} />\n                    ))}\n                </ul>\n            </section>\n        </main>\n        <Footer />\n        </>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n    return (\n        <div className={`picture ${card && (`popup-opened`)}`}>\n            <div className=\"picture__column\">\n                <img className=\"picture__img\" src={card ? card.link : ''} alt={card ? card.name : ''}/>\n                <h2 className=\"picture__title\">{card && card.name}</h2>\n                <button type=\"button\" aria-label=\"Close Picture Button\" className=\"form__exit-btn btn-animate\" onClick={onClose}></button>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    // Function replaced by getUser in auth\n    getUserInfo(token) {\n        return fetch(`${this.options.baseUrl}/user`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n          .then(res => {\n            if (res.status === 200) {\n                return res.json().data;\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout, token }) {\n        return fetch(`${this.options.baseUrl}/user/me`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({ \"name\": newName, \"about\": newAbout })\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl, token }) {\n        return fetch(`${this.options.baseUrl}/user/me/avatar`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({ \"avatar\": newUrl })\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards(token) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    addNewCard({ name: newName, link: newLink, token }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard({ cardId, token }) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard({ card, isLiked, token }) {\n        // If the card is already liked by the user, the like is removed, else a like is added\n        if (isLiked) {\n            return fetch(`${this.options.baseUrl}/cards/${card._id}/likes`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/${card._id}/likes`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://api.ws.p15.students.nomoreparties.site\",\n});\n\nexport default api;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return(\n        <form className={`form ${props.name} ${props.isOpen && (`popup-opened`)}`} name={props.name} onSubmit={props.onSubmit}>\n            <div className=\"form__container\">\n                <h2 className=\"form__title\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"form__save-button btn-animate\">{props.btnText}</button>\n                <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-btn btn-animate\" onClick={props.onClose}></button>\n            </div>\n        </form>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    // Hook will load user data and then will \n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n    const [name, setName] = React.useState(currentUser.name);\n    const [description, setDescription] = React.useState(currentUser.about);\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({ name: name, about: description });\n    }\n\n    return (\n        <PopupWithForm name=\"form-edit\" title=\"Edit profile\" isOpen={props.isOpen} btnText=\"Save\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"text\" value={name} onChange={handleName} required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-z -]*\" />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-occupation\" name=\"secondary\" className=\"form__occupation form__input secondary\" type=\"text\" value={description} onChange={handleDescription} required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"form-occupation-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nclass EditAvatarPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: '',\n            isOpen: this.props.isOpen,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(e) {\n        const {value} = e.target\n        this.setState({ avatar: value })\n    }\n\n    handleClose() {\n        this.props.onClose();\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.onUpdateAvatar({ avatar: this.state.avatar });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen === true && this.props.isOpen === false) {\n            this.setState({ avatar: '' });\n        }\n    }\n\n    render() {\n        return (\n            <PopupWithForm name=\"form-pic\" title=\"Change userpic\" isOpen={this.props.isOpen} btnText=\"Save\" onClose={this.handleClose} onSubmit={this.handleSubmit}>\n                <label className=\"form__input-field\">\n                    <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"url\" value={this.state.avatar} placeholder={this.props.currentUser.avatar} onChange={this.handleChange} required />\n                    <span id=\"form-name-error\" className=\"form__error\"></span>\n                </label>\n            </PopupWithForm>\n        );\n    };\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n\n    const [name, setName] = React.useState('');\n    const [url, setUrl] = React.useState('');\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleUrl(e) {\n        setUrl(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({ name: name, link: url });\n        setName(\"\");\n        setUrl(\"\");\n    }\n\n    return (\n        <PopupWithForm name=\"form-add\" title=\"New place\" isOpen={props.isOpen} btnText=\"Create\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-place\" name=\"primary\" className=\"form__place form__input\" type=\"text\" placeholder=\"Title\" value={name} onChange={handleName} required minLength=\"1\" maxLength=\"30\" />\n                <span id=\"form-place-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-url\" name=\"secondary\" className=\"form__url form__input\" type=\"url\" placeholder=\"Image link\" value={url} onChange={handleUrl} required />\n                <span id=\"form-url-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    return (\n      <Route>\n          {\n              () => props.loggedIn ? <Component {...props} /> : <Redirect to='/signin' />\n          }\n      </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Header from './Header';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { email, password } = this.state;\n        this.props.register(email, password);\n    }\n\n    render() {\n        return (\n            <>\n                <Header linkText=\"Log In\" linkTo=\"/signin\" />\n                <main className=\"content\">\n                    <form className=\"register\">\n                        <h2 className=\"register__header\">Sign Up</h2>\n                        <input name=\"email\" className=\"register__input\" type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\"/>\n                        <input name=\"password\" className=\"register__input\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\n                        <button className=\"register__button btn-animate\" onClick={this.handleSubmit}>Sign Up</button>\n                        <Link to=\"/signin\" className=\"register__link btn-animate\">Already a member? Log in here!</Link>                        \n                    </form>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Register);","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Header from './Header';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { email, password } = this.state;\n        this.props.logIn(email, password);\n    }\n\n    render() {\n        return (\n            <>\n                <Header linkText=\"Sign Up\" linkTo=\"/signup\" />\n                <main className=\"content\">\n                    <form className=\"register\">\n                        <h2 className=\"register__header\">Log In</h2>\n                        <input name=\"email\" className=\"register__input\" type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\"/>\n                        <input name=\"password\" className=\"register__input\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\n                        <button className=\"register__button btn-animate\" onClick={this.handleSubmit}>Log In</button>\n                        <Link to=\"/signup\" className=\"register__link btn-animate\">Not a member yet? Sign up here!</Link>                        \n                    </form>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nclass InfoToolTip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className={`form ${this.props.isOpen && (`popup-opened`)}`}>\n                <div className=\"form__container\">\n                    <div className={`form__tool-icon ${this.props.success ? `form__tool-icon_success` : `form__tool-icon_failure`}`} />\n                    <h2 className=\"form__tool-tip\">{this.props.success ? \"Success! You have now been registered.\" : \"Oops, something went wrong! Please try again.\"}</h2>\n                    <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-btn btn-animate\" onClick={this.props.onClose}></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(InfoToolTip);","//const BASE_URL = 'https://register.nomoreparties.co';\nconst BASE_URL = 'https://api.ws.p15.students.nomoreparties.site';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"name\": \"Name\",\n            \"about\": \"About me\",\n            \"avatar\": \"https://icon-library.com/images/default-user-icon/default-user-icon-6.jpg\",\n            \"password\": password,\n            \"email\": email,\n        })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful registration');\n        }\n    });\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful login');\n        }\n    }).then((data) => {\n        localStorage.setItem('jwt', data.token);\n        return data.user;\n    });\n};\n\nexport const getUser = (token) => {\n    return fetch(`${BASE_URL}/user`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    }).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n}","import React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Main from './Main.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip'\nimport * as auth from '../utils/auth.js';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            isLoggedIn: null,\n            userEmail: null,\n            currentUser: {},\n            jwt: null,\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isEditAvatarOpen: false,\n            isInfoToolTipOpen: false,\n            regSuccess: false,\n            selectedCard: null,\n            cards: [],\n        };\n        this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n        this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n        this.handleAddPlaceClick = this.handleAddPlaceClick.bind(this);\n        this.handleAuthRegClick = this.handleAuthRegClick.bind(this);\n        this.closeAllPopups = this.closeAllPopups.bind(this);\n        this.handleCardClick = this.handleCardClick.bind(this);\n        this.handleUpdateUser = this.handleUpdateUser.bind(this);\n        this.handleUpdateAvatar = this.handleUpdateAvatar.bind(this);\n        this.handleCardLike = this.handleCardLike.bind(this);\n        this.handleCardDelete = this.handleCardDelete.bind(this);\n        this.handleAddPlace= this.handleAddPlace.bind(this);\n        this.handleLogIn = this.handleLogIn.bind(this);\n        this.handleLogOut = this.handleLogOut.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n    }\n\n    componentDidMount() {\n        // Check if user has jwt token\n        const jwt = localStorage.getItem('jwt');\n\n        if (jwt) {\n            this.setState({ jwt: jwt });\n            auth.getUser(jwt).then((res) => {\n                if (res) {\n                    this.setState({ \n                        isLoggedIn: true,\n                        userEmail: res.data.email,\n                        currentUser: res.data,\n                    });\n                }\n            }).then(() => {\n                this.props.history.push('/');\n            }).catch((err) => { \n                console.log(err) \n            });\n        }   \n            //  // Get user info for profile section\n            // api.getUserInfo(jwt).then((res) => { \n            //     this.setState({ currentUser: res }); \n            // }).catch((err) => { \n            //     console.log(err) \n            // });\n            \n            // Get initial cards\n            api.getInitialCards(jwt).then((res) => { \n                if (res) {\n                    this.setState({ cards: res.data });\n                }\n            }).catch((err) => { \n                console.log(err) \n            });\n    }\n\n    handleLogIn(email, password) {\n        auth.authorize(email, password).then((res) => {\n            if (res) {\n                this.setState({ isLoggedIn: true, userEmail: email, currentUser: res }, \n                    () => {\n                        api.getInitialCards(localStorage.getItem('jwt')).then((res) => { \n                            if (res) {\n                                this.setState({ cards: res.data });\n                            }\n                        });\n                        this.props.history.push('/');\n                    });\n            } else {\n                this.handleAuthRegClick(false);\n            }\n        }).catch((err) => { \n            console.log(err) \n        });\n    }\n\n    handleRegister(email, password) {\n        auth.register(email, password).then((res) => {\n            if (res) {\n                this.handleAuthRegClick(true);\n                this.props.history.push('/signin');\n            } else {\n                this.handleAuthRegClick(false);\n            }\n        }).catch((err) => { \n            this.handleAuthRegClick(false)\n            console.log(err) \n        });\n    }\n\n    handleLogOut() {\n        localStorage.removeItem('jwt');\n        this.setState({ isLoggedIn: false, email: null, currentUser: {} });\n    }\n\n    handleEditAvatarClick() {\n        this.setState({ isEditAvatarOpen: true });\n    }\n\n    handleEditProfileClick() {\n        this.setState({ isEditProfileOpen: true });\n    }\n\n    handleAddPlaceClick() {\n        this.setState({ isAddPlaceOpen: true });\n    }\n\n    handleAuthRegClick(result) {\n        this.setState({\n            regSuccess: result,\n            isInfoToolTipOpen: true\n        });\n    }\n\n    closeAllPopups() {\n        this.setState({\n            isEditAvatarOpen: false,\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isInfoToolTipOpen: false,\n            selectedCard: null\n        });\n    }\n\n    handleCardClick(card) {\n        this.setState({ selectedCard: card });\n    }\n\n    handleUpdateUser(newInfo) {\n        api.patchUserInfo({...newInfo, token: this.state.jwt })\n            .then((res) => { this.setState({ currentUser: res.data }, this.closeAllPopups())})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleUpdateAvatar(avatar) {\n        api.patchUserPic({...avatar, token: this.state.jwt })\n            .then((res) => { this.setState({ currentUser: res.data }, this.closeAllPopups())})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardLike(card) {\n        const isLiked = card.likes.some(i => i === this.state.currentUser._id);\n        api.likeCard({ card, isLiked, token: this.state.jwt })\n            .then((res) => {\n                const newCards = this.state.cards.map((c) => (c._id === card._id) ? res.data : c);\n                this.setState({ cards: newCards });\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardDelete(card) {\n        api.deleteCard({ cardId: card._id, token: this.state.jwt })\n            .then(() => {\n                const newCards = this.state.cards.filter((c) => c._id !== card._id);\n                this.setState({ cards: newCards });\n            }).catch((err) => { \n                console.log(err) \n            });\n    }\n\n    handleAddPlace(card) {\n        api.addNewCard({...card, token: this.state.jwt })\n            .then((res) => {\n                const newCards = [...this.state.cards, res.data];\n                this.setState({ cards: newCards }, this.closeAllPopups());\n            }).catch((err) => { \n                console.log(err) \n            });\n    }\n\n    render() {\n        return (\n            <CurrentUserContext.Provider value={this.state.currentUser}>\n                <Switch>\n                    <ProtectedRoute exact path=\"/\" component={Main} loggedIn={this.state.isLoggedIn} userEmail={this.state.userEmail} \n                        onEditProfile={this.handleEditProfileClick} onAddPlace={this.handleAddPlaceClick} onEditAvatar={this.handleEditAvatarClick}\n                        onCardClick={this.handleCardClick} onClose={this.closeAllPopups} cards={this.state.cards} onCardLike={this.handleCardLike} \n                        onCardDelete={this.handleCardDelete} logOut={this.handleLogOut} />\n                    <Route path='/signup'>\n                        <Register register={this.handleRegister} />\n                    </Route>\n                    <Route path='/signin'>\n                        <Login logIn={this.handleLogIn} />\n                    </Route>\n                    <Route path='*'>\n                        <Redirect to=\"/signin\" />\n                    </Route>\n                </Switch>\n                \n                {/* Popup ToolTip for Registration/Login */}\n                <InfoToolTip isOpen={this.state.isInfoToolTipOpen} success={this.state.regSuccess} onClose={this.closeAllPopups} />    \n\n                {/* Popup Edit User Info Form */}\n                <EditProfilePopup isOpen={this.state.isEditProfileOpen} onClose={this.closeAllPopups} onUpdateUser={this.handleUpdateUser} />\n\n                {/* Popup Edit User Pic Form */}\n                <EditAvatarPopup isOpen={this.state.isEditAvatarOpen} onClose={this.closeAllPopups} onUpdateAvatar={this.handleUpdateAvatar} currentUser={this.state.currentUser} />\n\n                {/* Popup Add Form */}\n                <AddPlacePopup isOpen={this.state.isAddPlaceOpen} onClose={this.closeAllPopups} onAddPlace={this.handleAddPlace} />\n\n                {/* Popup Delete Form */}\n                {/* <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={this.closeAllPopups} /> */}\n\n                {/* Image Popup */}\n                <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups} />\n\n            </CurrentUserContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}