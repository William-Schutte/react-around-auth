{"version":3,"sources":["images/header-logo.svg","serviceWorker.js","contexts/CurrentUserContext.js","components/Card.js","components/Header.js","components/Footer.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","utils/auth.js","components/Register.js","components/Login.js","components/InfoToolTip.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","owner","card","_id","cardDeleteButtonClasses","isLiked","likes","some","i","cardLikeButtonClasses","className","style","backgroundImage","link","onClick","onCardClick","type","aria-label","onCardDelete","name","onCardLike","length","Header","src","headerLogo","alt","linkText","to","linkTo","userEmail","e","localStorage","removeItem","setLoggedIn","loggedIn","email","Footer","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","key","onClose","PopupWithForm","isOpen","onSubmit","title","children","btnText","ImagePopup","api","options","this","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","newName","newAbout","method","body","JSON","stringify","newUrl","newLink","cardId","cardData","authorization","EditProfilePopup","useEffect","setName","setDescription","useState","description","preventDefault","onUpdateUser","id","value","onChange","target","required","minLength","maxLength","pattern","EditAvatarPopup","avatarUrl","useRef","onUpdateAvatar","current","ref","placeholder","AddPlacePopup","url","setUrl","ProtectedRoute","Component","component","BASE_URL","Register","state","password","handleChange","bind","handleSubmit","setState","Error","catch","err","console","log","auth","history","push","withRouter","Login","data","setItem","token","InfoToolTip","success","App","isLoggedIn","isEditProfileOpen","isAddPlaceOpen","isEditAvatarOpen","isInfoToolTipOpen","regSuccess","selectedCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleAuthRegClick","closeAllPopups","handleCardClick","handleUpdateUser","handleUpdateAvatar","handleCardLike","handleCardDelete","handleAddPlace","handleSetLoggedIn","getUserInfo","getInitialCards","jwt","getItem","result","newInfo","patchUserInfo","patchUserPic","likeCard","newCards","c","deleteCard","filter","addNewCard","Provider","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,yC,4ICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8DCfSC,EADYC,IAAMC,gBCsClBC,MApCf,SAAcC,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAG/BO,EAAQH,EAAMI,KAAKD,MAAME,MAAQJ,EAAYI,IAC7CC,EAAuB,8BAA0BH,EAAQ,8BAAgC,8BAGzFI,EAAUP,EAAMI,KAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAC3DM,EAAqB,2BAAuBJ,GAAW,2BAY7D,OACI,wBAAIK,UAAU,QACV,yBAAKA,UAAU,cAAcC,MAAO,CAAEC,gBAAgB,OAAD,OAASd,EAAMI,KAAKW,KAApB,MAA+BC,QAZ5F,WACIhB,EAAMiB,YAAYjB,EAAMI,SAYpB,4BAAQc,KAAK,SAASC,aAAW,qBAAqBP,UAAWN,EAAyBU,QAPlG,WACIhB,EAAMoB,aAAapB,EAAMI,SAOrB,yBAAKQ,UAAU,iBACX,wBAAIA,UAAU,cAAcZ,EAAMI,KAAKiB,MACvC,yBAAKT,UAAU,qBACX,4BAAQM,KAAK,SAASC,aAAW,uBAAuBP,UAAWD,EAAuBK,QAd1G,WACIhB,EAAMsB,WAAWtB,EAAMI,SAcX,uBAAGQ,UAAU,oBAAoBZ,EAAMI,KAAKI,MAAMe,Y,iBCTvDC,MApBf,SAAgBxB,GAOZ,OACI,4BAAQY,UAAU,UACd,yBAAKA,UAAU,eAAea,IAAKC,IAAYC,IAAI,yBAClD3B,EAAM4B,UAAY,kBAAC,IAAD,CAAMhB,UAAU,2BAA2BiB,GAAI7B,EAAM8B,QAAS9B,EAAM4B,UACtF5B,EAAM+B,WACH,oCACI,uBAAGnB,UAAU,gBAAgBZ,EAAM+B,WACnC,kBAAC,IAAD,CAAMnB,UAAU,+BAA+BI,QAZ3C,SAACgB,GACjBC,aAAaC,WAAW,OACxBlC,EAAMmC,YAAY,CAAEC,UAAU,EAAOC,MAAO,QAUqCR,GAAG,KAAxE,cCRLS,MARf,WACI,OACI,4BAAQ1B,UAAU,UACV,uBAAGA,UAAU,qBAAb,+CCoCD2B,MAnCf,SAAcvC,GAGV,IAAMC,EAAcJ,IAAMK,WAAWN,GAErC,OACI,oCACA,kBAAC,EAAD,CAAQmC,UAAW/B,EAAM+B,UAAWI,YAAanC,EAAMmC,cACvD,0BAAMvB,UAAU,WAEZ,6BAASA,UAAU,WACf,4BAAQM,KAAK,SAASN,UAAU,sBAAsBI,QAAShB,EAAMwC,eACrE,yBAAK5B,UAAU,mBAAmBC,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAYwC,OAArB,MAAkCd,IAAI,mBAChG,yBAAKf,UAAU,iBACX,wBAAIA,UAAU,iBAAiBX,EAAYoB,MAC3C,uBAAGT,UAAU,uBAAuBX,EAAYyC,QAEpD,4BAAQxB,KAAK,SAASC,aAAW,sBAAsBP,UAAU,mCAAmCI,QAAShB,EAAM2C,gBACnH,4BAAQzB,KAAK,SAASC,aAAW,kBAAkBP,UAAU,kCAAkCI,QAAShB,EAAM4C,cAIlH,6BAAShC,UAAU,SACf,wBAAIA,UAAU,oBACTZ,EAAM6C,MAAMC,KAAI,SAAA1C,GAAI,OACjB,kBAAC,EAAD,CAAM2C,IAAK3C,EAAKC,IAAKD,KAAMA,EAAMa,YAAajB,EAAMiB,YAAaK,WAAYtB,EAAMsB,WAAYF,aAAcpB,EAAMoB,aAAc4B,QAAShD,EAAMgD,gBAKhK,kBAAC,EAAD,QCrBOC,MAbf,SAAuBjD,GACnB,OACI,0BAAMY,UAAS,eAAUZ,EAAMqB,KAAhB,YAAwBrB,EAAMkD,QAAN,gBAAoC7B,KAAMrB,EAAMqB,KAAM8B,SAAUnD,EAAMmD,UACzG,yBAAKvC,UAAU,mBACX,wBAAIA,UAAU,eAAeZ,EAAMoD,OAClCpD,EAAMqD,SACP,4BAAQnC,KAAK,SAASN,UAAU,iCAAiCZ,EAAMsD,SACvE,4BAAQpC,KAAK,SAASC,aAAW,oBAAoBP,UAAU,gCAAgCI,QAAShB,EAAMgD,aCK/GO,MAZf,YAAwC,IAAlBnD,EAAiB,EAAjBA,KAAM4C,EAAW,EAAXA,QACxB,OACI,yBAAKpC,UAAS,kBAAaR,GAAI,iBAC3B,yBAAKQ,UAAU,mBACX,yBAAKA,UAAU,eAAea,IAAKrB,EAAOA,EAAKW,KAAO,GAAIY,IAAKvB,EAAOA,EAAKiB,KAAO,KAClF,wBAAIT,UAAU,kBAAkBR,GAAQA,EAAKiB,MAC7C,4BAAQH,KAAK,SAASC,aAAW,uBAAuBP,UAAU,gCAAgCI,QAASgC,OC2H5GQ,EARH,I,WAxHR,WAAYC,GAAU,oBACpBC,KAAKD,QAAUA,E,0DAIb,OAAOE,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,aAAqC,CAC7CC,QAASH,KAAKD,QAAQI,UAEvBC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,uCAKG,IAA7BC,EAA4B,EAAlChD,KAAsBiD,EAAY,EAAnB5B,MAC3B,OAAOiB,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,aAAqC,CAC7CW,OAAQ,QACRV,QAASH,KAAKD,QAAQI,QACtBW,KAAMC,KAAKC,UAAU,CAAErD,KAAMgD,EAAS3B,MAAO4B,MAE5CR,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,sCAKlB,IAAXO,EAAU,EAAlBlC,OACX,OAAOkB,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,oBAA4C,CACpDW,OAAQ,QACRV,QAASH,KAAKD,QAAQI,QACtBW,KAAMC,KAAKC,UAAU,CAAEjC,OAAQkC,MAE9Bb,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,wCAMhD,OAAOT,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,UAAkC,CAC5CC,QAASH,KAAKD,QAAQI,UAErBC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,oCAKF,IAA3BC,EAA0B,EAAhChD,KAAqBuD,EAAW,EAAjB7D,KACxB,OAAO4C,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,UAAkC,CAC1CW,OAAQ,OACRV,QAASH,KAAKD,QAAQI,QACtBW,KAAMC,KAAKC,UAAU,CAAErD,KAAMgD,EAAStD,KAAM6D,MAE3Cd,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,iCAKvCS,GACP,OAAOlB,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,kBAAkCiB,GAAU,CACpDN,OAAQ,SACRV,QAASH,KAAKD,QAAQI,UAErBC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,c,+BAK3CU,EAAUvE,GAEf,OAAIA,EACOoD,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,wBAAwCkB,EAASzE,KAAO,CAChEkE,OAAQ,SACRV,QAASH,KAAKD,QAAQI,UAErBC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAIzCT,MAAM,GAAD,OAAID,KAAKD,QAAQG,QAAjB,wBAAwCkB,EAASzE,KAAO,CAChEkE,OAAQ,MACRV,QAASH,KAAKD,QAAQI,UAErBC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,gB,KAQhD,CAAQ,CAChBR,QAAS,6CACTC,QAAS,CACLkB,cAAe,uCACf,eAAgB,sB,QCnFTC,MAxCf,SAA0BhF,GAEtB,IAAMC,EAAcJ,IAAMK,WAAWN,GAErCC,IAAMoF,WAAU,WACZC,EAAQjF,EAAYoB,MACpB8D,EAAelF,EAAYyC,SAC5B,CAACzC,IAPyB,MASLJ,IAAMuF,SAASnF,EAAYoB,MATtB,mBAStBA,EATsB,KAShB6D,EATgB,OAUSrF,IAAMuF,SAASnF,EAAYyC,OAVpC,mBAUtB2C,EAVsB,KAUTF,EAVS,KA0B7B,OACI,kBAAC,EAAD,CAAe9D,KAAK,YAAY+B,MAAM,eAAeF,OAAQlD,EAAMkD,OAAQI,QAAQ,OAAON,QAAShD,EAAMgD,QAASG,SAPtH,SAAsBnB,GAClBA,EAAEsD,iBACFtF,EAAMuF,aAAa,CAAElE,KAAMA,EAAMqB,MAAO2C,IACxCrF,EAAMgD,YAKF,2BAAOpC,UAAU,qBACb,2BAAO4E,GAAG,YAAYnE,KAAK,UAAUT,UAAU,yBAAyBM,KAAK,OAAOuE,MAAOpE,EAAMqE,SAjB7G,SAAoB1D,GAChBkD,EAAQlD,EAAE2D,OAAOF,QAgB8GG,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,QAAQ,gBACrK,0BAAMP,GAAG,kBAAkB5E,UAAU,iBAEzC,2BAAOA,UAAU,qBACb,2BAAO4E,GAAG,kBAAkBnE,KAAK,YAAYT,UAAU,yCAAyCM,KAAK,OAAOuE,MAAOJ,EAAaK,SAjB5I,SAA2B1D,GACvBmD,EAAenD,EAAE2D,OAAOF,QAgB6IG,UAAQ,EAACC,UAAU,IAAIC,UAAU,QAC9L,0BAAMN,GAAG,wBAAwB5E,UAAU,mBCT5CoF,MAzBf,SAAyBhG,GAGrB,IAAMC,EAAcJ,IAAMK,WAAWN,GAG/BqG,EAAYpG,IAAMqG,SASxB,OACI,kBAAC,EAAD,CAAe7E,KAAK,WAAW+B,MAAM,iBAAiBF,OAAQlD,EAAMkD,OAAQI,QAAQ,OAAON,QAAShD,EAAMgD,QAASG,SARvH,SAAsBnB,GAClBA,EAAEsD,iBACFtF,EAAMmG,eAAe,CAAE1D,OAAQwD,EAAUG,QAAQX,QACjDzF,EAAMgD,UACNiD,EAAUG,QAAQX,MAAQ,OAKtB,2BAAO7E,UAAU,qBACb,2BAAOyF,IAAKJ,EAAWT,GAAG,YAAYnE,KAAK,UAAUT,UAAU,yBAAyBM,KAAK,MAAMoF,YAAarG,EAAYwC,OAAQmD,UAAQ,IAC5I,0BAAMJ,GAAG,kBAAkB5E,UAAU,mBCatC2F,MAjCf,SAAuBvG,GAAQ,IAAD,EAEFH,IAAMuF,SAAS,MAFb,mBAEnB/D,EAFmB,KAEb6D,EAFa,OAGJrF,IAAMuF,SAAS,MAHX,mBAGnBoB,EAHmB,KAGdC,EAHc,KAmB1B,OACI,kBAAC,EAAD,CAAepF,KAAK,WAAW+B,MAAM,YAAYF,OAAQlD,EAAMkD,OAAQI,QAAQ,SAASN,QAAShD,EAAMgD,QAASG,SAPpH,SAAsBnB,GAClBA,EAAEsD,iBACFtF,EAAM4C,WAAW,CAAEvB,KAAMA,EAAMN,KAAMyF,IACrCxG,EAAMgD,YAKF,2BAAOpC,UAAU,qBACb,2BAAO4E,GAAG,aAAanE,KAAK,UAAUT,UAAU,0BAA0BM,KAAK,OAAOoF,YAAY,QAAQb,MAAOpE,EAAMqE,SAjBnI,SAAoB1D,GAChBkD,EAAQlD,EAAE2D,OAAOF,QAgBoIG,UAAQ,EAACC,UAAU,IAAIC,UAAU,OAC9K,0BAAMN,GAAG,mBAAmB5E,UAAU,iBAE1C,2BAAOA,UAAU,qBACb,2BAAO4E,GAAG,WAAWnE,KAAK,YAAYT,UAAU,wBAAwBM,KAAK,MAAMoF,YAAY,aAAab,MAAOe,EAAKd,SAjBpI,SAAmB1D,GACfyE,EAAOzE,EAAE2D,OAAOF,QAgBqIG,UAAQ,IACrJ,0BAAMJ,GAAG,iBAAiB5E,UAAU,mB,QCjBrC8F,EAVQ,SAAC,GAAwC,IAA3BC,EAA0B,EAArCC,UAAyB5G,EAAY,6BAC3D,OACE,kBAAC,IAAD,MAEQ,kBAAMA,EAAMoC,SAAW,kBAACuE,EAAc3G,GAAY,kBAAC,IAAD,CAAU6B,GAAG,gB,QCPvEgF,EAAW,oCCKXC,E,kDACF,WAAY9G,GAAQ,IAAD,8BACf,cAAMA,IACD+G,MAAQ,CACT1E,MAAO,GACP2E,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDAUNlF,GAAI,IAAD,EACUA,EAAE2D,OAAjBtE,EADK,EACLA,KAAMoE,EADD,EACCA,MACb/B,KAAK0D,SAAL,eAAiB/F,EAAOoE,M,mCAGfzD,GAAI,IAAD,OACZA,EAAEsD,iBADU,MAEgB5B,KAAKqD,ODrBjB,SAAC1E,EAAO2E,GAC5B,OAAOrD,MAAM,GAAD,OAAIkD,EAAJ,WAAuB,CAC/BtC,OAAQ,OACRV,QAAS,CACL,eAAgB,oBAEpBW,KAAMC,KAAKC,UAAU,CAAE,SAAYsC,EAAU,MAAS3E,MACvDyB,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIK,OACJ,OAAOL,EAAIE,OAEX,MAAM,IAAIoD,MAAM,gCAErBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OCS1BG,CAHY,EAEJrF,MAFI,EAEG2E,UACgBlD,MAAK,SAACC,GAC7BA,GACA,EAAK/D,MAAMgB,SAAQ,GACnB,EAAKoG,SAAS,CAAE/E,MAAO,GAAI2E,SAAU,KACrC,WAAQ,EAAKhH,MAAM2H,QAAQC,KAAK,eAEhC,EAAK5H,MAAMgB,SAAQ,Q,+BAM3B,OACI,oCACI,kBAAC,EAAD,CAAQY,SAAS,SAASE,OAAO,YACjC,0BAAMlB,UAAU,WACZ,0BAAMA,UAAU,YACZ,wBAAIA,UAAU,oBAAd,WACA,2BAAOS,KAAK,QAAQT,UAAU,kBAAkBM,KAAK,OAAOuE,MAAO/B,KAAKqD,MAAM1E,MAAOqD,SAAUhC,KAAKuD,aAAcX,YAAY,UAC9H,2BAAOjF,KAAK,WAAWT,UAAU,kBAAkBM,KAAK,WAAWuE,MAAO/B,KAAKqD,MAAMC,SAAUtB,SAAUhC,KAAKuD,aAAcX,YAAY,aACxI,4BAAQ1F,UAAU,+BAA+BI,QAAS0C,KAAKyD,cAA/D,WACA,kBAAC,IAAD,CAAMtF,GAAG,UAAUjB,UAAU,8BAA7B,yC,GAxCDf,IAAM8G,WAgDdkB,cAAWf,GChDpBgB,E,kDACF,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IACD+G,MAAQ,CACT1E,MAAO,GACP2E,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDAUNlF,GAAI,IAAD,EACUA,EAAE2D,OAAjBtE,EADK,EACLA,KAAMoE,EADD,EACCA,MACb/B,KAAK0D,SAAL,eAAiB/F,EAAOoE,M,mCAGfzD,GAAI,IAAD,OACZA,EAAEsD,iBADU,MAEgB5B,KAAKqD,MAAzB1E,EAFI,EAEJA,MAAO2E,EAFH,EAEGA,UFLE,SAAC3E,EAAO2E,GAC7B,OAAOrD,MAAM,GAAD,OAAIkD,EAAJ,WAAuB,CAC/BtC,OAAQ,OACRV,QAAS,CACL,eAAgB,oBAEpBW,KAAMC,KAAKC,UAAU,CAAE,SAAYsC,EAAU,MAAS3E,MACvDyB,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIK,OACJ,OAAOL,EAAIE,OAEX,MAAM,IAAIoD,MAAM,yBAErBvD,MAAK,SAACiE,GAEL,OADA9F,aAAa+F,QAAQ,MAAOD,EAAKE,QAC1B,KACRX,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OEV1BG,CAAerF,EAAO2E,GAAUlD,MAAK,SAACC,GAC9BA,EACA,EAAKqD,SAAS,CAAE/E,MAAO,GAAI2E,SAAU,KACrC,WACI,EAAKhH,MAAMmC,YAAY,CAAEC,UAAU,EAAMC,UACzC,EAAKrC,MAAM2H,QAAQC,KAAK,QAE5B,EAAK5H,MAAMgB,SAAQ,Q,+BAM3B,OACI,oCACI,kBAAC,EAAD,CAAQY,SAAS,UAAUE,OAAO,YAClC,0BAAMlB,UAAU,WACZ,0BAAMA,UAAU,YACZ,wBAAIA,UAAU,oBAAd,UACA,2BAAOS,KAAK,QAAQT,UAAU,kBAAkBM,KAAK,OAAOuE,MAAO/B,KAAKqD,MAAM1E,MAAOqD,SAAUhC,KAAKuD,aAAcX,YAAY,UAC9H,2BAAOjF,KAAK,WAAWT,UAAU,kBAAkBM,KAAK,WAAWuE,MAAO/B,KAAKqD,MAAMC,SAAUtB,SAAUhC,KAAKuD,aAAcX,YAAY,aACxI,4BAAQ1F,UAAU,+BAA+BI,QAAS0C,KAAKyD,cAA/D,UACA,kBAAC,IAAD,CAAMtF,GAAG,UAAUjB,UAAU,8BAA7B,0C,GAzCJf,IAAM8G,WAiDXkB,cAAWC,GClDpBI,E,kDACF,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IACD+G,MAAQ,GAFE,E,qDAMf,OACI,yBAAKnG,UAAS,eAAU8C,KAAK1D,MAAMkD,QAAX,iBACpB,yBAAKtC,UAAU,mBACX,yBAAKA,UAAS,0BAAqB8C,KAAK1D,MAAMmI,QAAX,uDACnC,wBAAIvH,UAAU,kBAAkB8C,KAAK1D,MAAMmI,QAAU,yCAA2C,iDAChG,4BAAQjH,KAAK,SAASC,aAAW,oBAAoBP,UAAU,gCAAgCI,QAAS0C,KAAK1D,MAAMgD,gB,GAZ7GnD,IAAM8G,WAmBjBkB,cAAWK,GCPpBE,E,kDACF,aAAe,IAAD,8BACV,gBACKrB,MAAM,CACPsB,WAAY,KACZtG,UAAW,GACX9B,YAAa,GACbqI,mBAAmB,EACnBC,gBAAgB,EAChBC,kBAAkB,EAClBC,mBAAmB,EACnBC,YAAY,EACZC,aAAc,KACd9F,MAAO,IAEX,EAAK+F,sBAAwB,EAAKA,sBAAsB1B,KAA3B,gBAC7B,EAAK2B,uBAAyB,EAAKA,uBAAuB3B,KAA5B,gBAC9B,EAAK4B,oBAAsB,EAAKA,oBAAoB5B,KAAzB,gBAC3B,EAAK6B,mBAAqB,EAAKA,mBAAmB7B,KAAxB,gBAC1B,EAAK8B,eAAiB,EAAKA,eAAe9B,KAApB,gBACtB,EAAK+B,gBAAkB,EAAKA,gBAAgB/B,KAArB,gBACvB,EAAKgC,iBAAmB,EAAKA,iBAAiBhC,KAAtB,gBACxB,EAAKiC,mBAAqB,EAAKA,mBAAmBjC,KAAxB,gBAC1B,EAAKkC,eAAiB,EAAKA,eAAelC,KAApB,gBACtB,EAAKmC,iBAAmB,EAAKA,iBAAiBnC,KAAtB,gBACxB,EAAKoC,eAAgB,EAAKA,eAAepC,KAApB,gBACrB,EAAKqC,kBAAoB,EAAKA,kBAAkBrC,KAAvB,gBAzBf,E,gEA4BO,IAAD,OAEhB1D,EAAIgG,cAAc1F,MAAK,SAACC,GACpB,EAAKqD,SAAS,CAAEnH,YAAa8D,OAC9BuD,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB/D,EAAIiG,kBAAkB3F,MAAK,SAACC,GACxB,EAAKqD,SAAS,CAAEvE,MAAOkB,OACxBuD,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB,IJxBgBU,EIwBVyB,EAAMzH,aAAa0H,QAAQ,OAC7BD,IJzBYzB,EI0BCyB,EJzBd/F,MAAM,GAAD,OAAIkD,EAAJ,aAAyB,CACjCtC,OAAQ,MACRV,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BoE,MAEhCnE,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIK,OACJ,OAAOL,EAAIE,WIiBOH,MAAK,SAACC,GAChBA,GACA,EAAKqD,SAAS,CACViB,YAAY,EACZtG,UAAWgC,EAAIgE,KAAK1F,WAG7ByB,MAAK,WACJ,EAAK9D,MAAM2H,QAAQC,KAAK,U,2CAKE,IAAnBxF,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,MACzBqB,KAAK0D,SAAS,CACViB,WAAYjG,EACZL,UAAWM,M,8CAKfqB,KAAK0D,SAAS,CAAEoB,kBAAkB,M,+CAIlC9E,KAAK0D,SAAS,CAAEkB,mBAAmB,M,4CAInC5E,KAAK0D,SAAS,CAAEmB,gBAAgB,M,yCAGjBqB,GACflG,KAAK0D,SAAS,CACVsB,WAAYkB,EACZnB,mBAAmB,M,uCAKvB/E,KAAK0D,SAAS,CACVoB,kBAAkB,EAClBF,mBAAmB,EACnBC,gBAAgB,EAChBE,mBAAmB,EACnBE,aAAc,S,sCAINvI,GACZsD,KAAK0D,SAAS,CAAEuB,aAAcvI,M,uCAGjByJ,GAAU,IAAD,OACtBrG,EAAIsG,cAAcD,GACb/F,MAAK,SAACC,GAAU,EAAKqD,SAAS,CAAEnH,YAAa8D,OAC7CuD,OAAM,SAACC,GAAUC,QAAQC,IAAIF,Q,yCAGnB9E,GAAS,IAAD,OACvBe,EAAIuG,aAAatH,GACZqB,MAAK,SAACC,GAAU,EAAKqD,SAAS,CAAEnH,YAAa8D,OAC7CuD,OAAM,SAACC,GAAUC,QAAQC,IAAIF,Q,qCAGvBnH,GAAO,IAAD,OACXG,EAAUH,EAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQ,EAAK0G,MAAM9G,YAAYI,OACtEmD,EAAIwG,SAAS5J,EAAMG,GACduD,MAAK,SAACC,GACH,IAAMkG,EAAW,EAAKlD,MAAMlE,MAAMC,KAAI,SAACoH,GAAD,OAAOA,EAAE7J,MAAQD,EAAKC,IAAM0D,EAAMmG,KACxE,EAAK9C,SAAS,CAAEvE,MAAOoH,OAE1B3C,OAAM,SAACC,GAAUC,QAAQC,IAAIF,Q,uCAGrBnH,GAAO,IAAD,OACnBoD,EAAI2G,WAAW/J,EAAKC,KACfyD,MAAK,WACF,IAAMmG,EAAW,EAAKlD,MAAMlE,MAAMuH,QAAO,SAACF,GAAD,OAAOA,EAAE7J,MAAQD,EAAKC,OAC/D,EAAK+G,SAAS,CAAEvE,MAAOoH,S,qCAIpB7J,GAAO,IAAD,OACjBoD,EAAI6G,WAAWjK,GACV0D,MAAK,SAACC,GACH,IAAMkG,EAAQ,sBAAO,EAAKlD,MAAMlE,OAAlB,CAAyBkB,IACvC,EAAKqD,SAAS,CAAEvE,MAAOoH,S,+BAK/B,OACI,kBAAC,EAAmBK,SAApB,CAA6B7E,MAAO/B,KAAKqD,MAAM9G,aAC3C,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAgBsK,OAAK,EAACC,KAAK,IAAI5D,UAAWrE,EAAMH,SAAUsB,KAAKqD,MAAMsB,WAAYtG,UAAW2B,KAAKqD,MAAMhF,UACnGY,cAAee,KAAKmF,uBAAwBjG,WAAYc,KAAKoF,oBAAqBtG,aAAckB,KAAKkF,sBACrG3H,YAAayC,KAAKuF,gBAAiBjG,QAASU,KAAKsF,eAAgBnG,MAAOa,KAAKqD,MAAMlE,MAAOvB,WAAYoC,KAAK0F,eAC3GhI,aAAcsC,KAAK2F,iBAAkBlH,YAAauB,KAAK6F,oBAC3D,kBAAC,IAAD,CAAOiB,KAAK,WACR,kBAAC,EAAD,CAAUxJ,QAAS0C,KAAKqF,sBAE5B,kBAAC,IAAD,CAAOyB,KAAK,WACR,kBAAC,EAAD,CAAOxJ,QAAS0C,KAAKqF,mBAAoB5G,YAAauB,KAAK6F,qBAE/D,kBAAC,IAAD,CAAOiB,KAAK,KACR,kBAAC,IAAD,CAAU3I,GAAG,cAKrB,kBAAC,EAAD,CAAaqB,OAAQQ,KAAKqD,MAAM0B,kBAAmBN,QAASzE,KAAKqD,MAAM2B,WAAY1F,QAASU,KAAKsF,iBAGjG,kBAAC,EAAD,CAAkB9F,OAAQQ,KAAKqD,MAAMuB,kBAAmBtF,QAASU,KAAKsF,eAAgBzD,aAAc7B,KAAKwF,mBAGzG,kBAAC,EAAD,CAAiBhG,OAAQQ,KAAKqD,MAAMyB,iBAAkBxF,QAASU,KAAKsF,eAAgB7C,eAAgBzC,KAAKyF,qBAGzG,kBAAC,EAAD,CAAejG,OAAQQ,KAAKqD,MAAMwB,eAAgBvF,QAASU,KAAKsF,eAAgBpG,WAAYc,KAAK4F,iBAGjG,kBAAC,EAAD,CAAejI,KAAK,cAAc+B,MAAM,gBAAgBF,OAAQ,KAAMI,QAAQ,MAAMN,QAASU,KAAKsF,iBAGlG,kBAAC,EAAD,CAAY5I,KAAMsD,KAAKqD,MAAM4B,aAAc3F,QAASU,KAAKsF,sB,GA7KvDnJ,IAAM8G,WAoLTkB,cAAWO,GC7L1BqC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SlBwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjH,MAAK,SAAAkH,GACJA,EAAaC,gBAEd3D,OAAM,SAAA4D,GACL1D,QAAQ0D,MAAMA,EAAMC,c","file":"static/js/main.8c4ce336.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.8f7611ae.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Code to check if the card is owned by current user and determine the delete buttons visibility\n    const owner = props.card.owner._id === currentUser._id;\n    const cardDeleteButtonClasses = `card__delete-button ${owner ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`;\n\n    // Checks if the card was liked by the current user\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClasses = `card__fav-button ${isLiked && 'card__fav-button_active'}`;\n    \n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n    function handleDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick} />\n            <button type=\"button\" aria-label=\"Card Delete Button\" className={cardDeleteButtonClasses} onClick={handleDeleteClick}></button>\n            <div className=\"card__overlay\">\n                <h2 className=\"card__name\">{props.card.name}</h2>\n                <div className=\"card__like-column\">\n                    <button type=\"button\" aria-label=\"Card Favorite Button\" className={cardLikeButtonClasses} onClick={handleLikeClick}></button>\n                    <p className=\"card__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport headerLogo from '../images/header-logo.svg';\n\nfunction Header(props) {\n    \n    const handleClick = (e) => {\n        localStorage.removeItem('jwt');\n        props.setLoggedIn({ loggedIn: false, email: null });\n    }\n\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Around the U.S. Logo\" />\n            {props.linkText && <Link className=\"header__link btn-animate\" to={props.linkTo}>{props.linkText}</Link>}\n            {props.userEmail && \n                <>\n                    <p className=\"header__link\">{props.userEmail}</p>\n                    <Link className=\"header__sign-out btn-animate\" onClick={handleClick} to='/'>Log Out</Link>\n                </>}\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <p className=\"footer__copyright\">&copy;2020 William Schutte. Around the U.S.</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport Card from './Card.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction Main(props) {\n\n    // Import of context value from provider\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <>\n        <Header userEmail={props.userEmail} setLoggedIn={props.setLoggedIn} />\n        <main className=\"content\">\n            {/* Profile section at top of page, contains three buttons for editing profile and cards */}\n            <section className=\"profile\">\n                <button type=\"button\" className=\"profile__pic-button\" onClick={props.onEditAvatar}></button>\n                <div className=\"profile__picture\" style={{ backgroundImage: `url(${currentUser.avatar})` }} alt=\"My Profile Pic\" />\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <p className=\"profile__occupation\">{currentUser.about}</p>\n                </div>\n                <button type=\"button\" aria-label=\"Edit Profile Button\" className=\"profile__edit-button btn-animate\" onClick={props.onEditProfile}></button>\n                <button type=\"button\" aria-label=\"Add Card Button\" className=\"profile__add-button btn-animate\" onClick={props.onAddPlace}></button>\n            </section>\n\n            {/* Image cards section, generated from server response */}\n            <section className=\"cards\">\n                <ul className=\"cards__container\">\n                    {props.cards.map(card => (\n                        <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} onClose={props.onClose} />\n                    ))}\n                </ul>\n            </section>\n        </main>\n        <Footer />\n        </>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return(\n        <form className={`form ${props.name} ${props.isOpen && (`popup-opened`)}`} name={props.name} onSubmit={props.onSubmit}>\n            <div className=\"form__container\">\n                <h2 className=\"form__title\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"form__save-button btn-animate\">{props.btnText}</button>\n                <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-button btn-animate\" onClick={props.onClose}></button>\n            </div>\n        </form>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n    return (\n        <div className={`picture ${card && (`popup-opened`)}`}>\n            <div className=\"picture__column\">\n                <img className=\"picture__img\" src={card ? card.link : ''} alt={card ? card.name : ''}/>\n                <h2 className=\"picture__title\">{card && card.name}</h2>\n                <button type=\"button\" aria-label=\"Close Picture Button\" className=\"form__exit-button btn-animate\" onClick={onClose}></button>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    getUserInfo() {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout }) {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, about: newAbout })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl }) {\n        return fetch(`${this.options.baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ avatar: newUrl })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards() {\n        return fetch(`${this.options.baseUrl}/cards`, {\n          headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n    \n    addNewCard({ name: newName, link: newLink }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard(cardData, isLiked) {\n        // If the card is already liked by the user, the like is removed, else a like is added\n        if (isLiked) {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"DELETE\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"PUT\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n        \n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    // Hook will load user data and then will \n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    const [name, setName] = React.useState(currentUser.name);\n    const [description, setDescription] = React.useState(currentUser.about);\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({ name: name, about: description });\n        props.onClose();\n    }\n\n    return (\n        <PopupWithForm name=\"form-edit\" title=\"Edit profile\" isOpen={props.isOpen} btnText=\"Save\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"text\" value={name} onChange={handleName} required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-z -]*\" />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-occupation\" name=\"secondary\" className=\"form__occupation form__input secondary\" type=\"text\" value={description} onChange={handleDescription} required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"form-occupation-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditAvatarPopup(props) {\n\n    // Import of context value from provider\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Ref refers to input field DOM node\n    const avatarUrl = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({ avatar: avatarUrl.current.value });\n        props.onClose();\n        avatarUrl.current.value = null;\n    }\n\n    return (\n        <PopupWithForm name=\"form-pic\" title=\"Change userpic\" isOpen={props.isOpen} btnText=\"Save\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input ref={avatarUrl} id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"url\" placeholder={currentUser.avatar} required />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n\n    const [name, setName] = React.useState(null);\n    const [url, setUrl] = React.useState(null);\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleUrl(e) {\n        setUrl(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({ name: name, link: url });\n        props.onClose();\n    }\n\n    return (\n        <PopupWithForm name=\"form-add\" title=\"New place\" isOpen={props.isOpen} btnText=\"Create\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-place\" name=\"primary\" className=\"form__place form__input\" type=\"text\" placeholder=\"Title\" value={name} onChange={handleName} required minLength=\"1\" maxLength=\"30\" />\n                <span id=\"form-place-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-url\" name=\"secondary\" className=\"form__url form__input\" type=\"url\" placeholder=\"Image link\" value={url} onChange={handleUrl} required />\n                <span id=\"form-url-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    return (\n      <Route>\n          {\n              () => props.loggedIn ? <Component {...props} /> : <Redirect to='/signin' />\n          }\n      </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","const BASE_URL = 'https://register.nomoreparties.co';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 201) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful registration');\n        }\n    }).catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"password\": password, \"email\": email })\n    }).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        } else {\n            throw new Error('Unsuccessful login');\n        }\n    }).then((data) => {\n        localStorage.setItem('jwt', data.token)\n        return true;\n    }).catch((err) => console.log(err));\n};\n\nexport const getUser = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    }).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n}","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { email, password } = this.state;\n        auth.register(email, password).then((res) => {\n            if (res) {\n                this.props.onClick(true);\n                this.setState({ email: '', password: ''},\n                () => { this.props.history.push('/signin'); });\n            } else {\n                this.props.onClick(false);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Header linkText=\"Log In\" linkTo=\"/signin\" />\n                <main className=\"content\">\n                    <form className=\"register\">\n                        <h2 className=\"register__header\">Sign Up</h2>\n                        <input name=\"email\" className=\"register__input\" type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\"/>\n                        <input name=\"password\" className=\"register__input\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\n                        <button className=\"register__button btn-animate\" onClick={this.handleSubmit}>Sign Up</button>\n                        <Link to=\"/signin\" className=\"register__link btn-animate\">Already a member? Log in here!</Link>                        \n                    </form>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Register);","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { email, password } = this.state;\n        auth.authorize(email, password).then((res) => {\n            if (res) {\n                this.setState({ email: '', password: ''},\n                () => { \n                    this.props.setLoggedIn({ loggedIn: true, email });\n                    this.props.history.push('/'); });\n            } else {\n                this.props.onClick(false);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Header linkText=\"Sign Up\" linkTo=\"/signup\" />\n                <main className=\"content\">\n                    <form className=\"register\">\n                        <h2 className=\"register__header\">Log In</h2>\n                        <input name=\"email\" className=\"register__input\" type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\"/>\n                        <input name=\"password\" className=\"register__input\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\n                        <button className=\"register__button btn-animate\" onClick={this.handleSubmit}>Log In</button>\n                        <Link to=\"/signup\" className=\"register__link btn-animate\">Not a member yet? Sign up here!</Link>                        \n                    </form>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nclass InfoToolTip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className={`form ${this.props.isOpen && (`popup-opened`)}`}>\n                <div className=\"form__container\">\n                    <div className={`form__tool-icon ${this.props.success ? `form__tool-icon_success` : `form__tool-icon_failure`}`} />\n                    <h2 className=\"form__tool-tip\">{this.props.success ? \"Success! You have now been registered.\" : \"Oops, something went wrong! Please try again.\"}</h2>\n                    <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-button btn-animate\" onClick={this.props.onClose}></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(InfoToolTip);","import React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip'\nimport * as auth from '../utils/auth.js';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            isLoggedIn: null,\n            userEmail: '',\n            currentUser: {},\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isEditAvatarOpen: false,\n            isInfoToolTipOpen: false,\n            regSuccess: false,\n            selectedCard: null,\n            cards: [],\n        };\n        this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n        this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n        this.handleAddPlaceClick = this.handleAddPlaceClick.bind(this);\n        this.handleAuthRegClick = this.handleAuthRegClick.bind(this);\n        this.closeAllPopups = this.closeAllPopups.bind(this);\n        this.handleCardClick = this.handleCardClick.bind(this);\n        this.handleUpdateUser = this.handleUpdateUser.bind(this);\n        this.handleUpdateAvatar = this.handleUpdateAvatar.bind(this);\n        this.handleCardLike = this.handleCardLike.bind(this);\n        this.handleCardDelete = this.handleCardDelete.bind(this);\n        this.handleAddPlace= this.handleAddPlace.bind(this);\n        this.handleSetLoggedIn = this.handleSetLoggedIn.bind(this);\n    }\n\n    componentDidMount() {\n        // Get user info for profile section\n        api.getUserInfo().then((res) => { \n            this.setState({ currentUser: res}); \n        }).catch((err) => { \n            console.log(err) \n        });\n        \n        // Get initial cards\n        api.getInitialCards().then((res) => { \n            this.setState({ cards: res}); \n        }).catch((err) => { \n            console.log(err) \n        });\n\n        // Check if user has jwt token\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getUser(jwt).then((res) => {\n                if (res) {\n                    this.setState({ \n                        isLoggedIn: true,\n                        userEmail: res.data.email\n                    });\n                }\n            }).then(() => {\n                this.props.history.push('/'); ;\n            });\n        }   \n    }\n\n    handleSetLoggedIn({loggedIn, email}) {\n        this.setState({\n            isLoggedIn: loggedIn,\n            userEmail: email\n        })\n    }\n\n    handleEditAvatarClick() {\n        this.setState({ isEditAvatarOpen: true });\n    }\n\n    handleEditProfileClick() {\n        this.setState({ isEditProfileOpen: true });\n    }\n\n    handleAddPlaceClick() {\n        this.setState({ isAddPlaceOpen: true });\n    }\n\n    handleAuthRegClick(result) {\n        this.setState({\n            regSuccess: result,\n            isInfoToolTipOpen: true\n        });\n    }\n\n    closeAllPopups() {\n        this.setState({\n            isEditAvatarOpen: false,\n            isEditProfileOpen: false,\n            isAddPlaceOpen: false,\n            isInfoToolTipOpen: false,\n            selectedCard: null\n        });\n    }\n\n    handleCardClick(card) {\n        this.setState({ selectedCard: card });\n    }\n\n    handleUpdateUser(newInfo) {\n        api.patchUserInfo(newInfo)\n            .then((res) => { this.setState({ currentUser: res })})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleUpdateAvatar(avatar) {\n        api.patchUserPic(avatar)\n            .then((res) => { this.setState({ currentUser: res })})\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === this.state.currentUser._id);\n        api.likeCard(card, isLiked)\n            .then((res) => {\n                const newCards = this.state.cards.map((c) => c._id === card._id ? res : c);\n                this.setState({ cards: newCards });\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = this.state.cards.filter((c) => c._id !== card._id);\n                this.setState({ cards: newCards });\n            });\n    }\n\n    handleAddPlace(card) {\n        api.addNewCard(card)\n            .then((res) => {\n                const newCards = [...this.state.cards, res];\n                this.setState({ cards: newCards });\n            });\n    }\n\n    render() {\n        return (\n            <CurrentUserContext.Provider value={this.state.currentUser}>\n                <Switch>\n                    <ProtectedRoute exact path=\"/\" component={Main} loggedIn={this.state.isLoggedIn} userEmail={this.state.userEmail} \n                        onEditProfile={this.handleEditProfileClick} onAddPlace={this.handleAddPlaceClick} onEditAvatar={this.handleEditAvatarClick}\n                        onCardClick={this.handleCardClick} onClose={this.closeAllPopups} cards={this.state.cards} onCardLike={this.handleCardLike} \n                        onCardDelete={this.handleCardDelete} setLoggedIn={this.handleSetLoggedIn}/>\n                    <Route path='/signup'>\n                        <Register onClick={this.handleAuthRegClick} />\n                    </Route>\n                    <Route path='/signin'>\n                        <Login onClick={this.handleAuthRegClick} setLoggedIn={this.handleSetLoggedIn} />\n                    </Route>\n                    <Route path='*'>\n                        <Redirect to=\"/signin\" />\n                    </Route>\n                </Switch>\n                \n                {/* Popup ToolTip for Registration/Login */}\n                <InfoToolTip isOpen={this.state.isInfoToolTipOpen} success={this.state.regSuccess} onClose={this.closeAllPopups} />    \n\n                {/* Popup Edit User Info Form */}\n                <EditProfilePopup isOpen={this.state.isEditProfileOpen} onClose={this.closeAllPopups} onUpdateUser={this.handleUpdateUser} />\n\n                {/* Popup Edit User Pic Form */}\n                <EditAvatarPopup isOpen={this.state.isEditAvatarOpen} onClose={this.closeAllPopups} onUpdateAvatar={this.handleUpdateAvatar} />\n\n                {/* Popup Add Form */}\n                <AddPlacePopup isOpen={this.state.isAddPlaceOpen} onClose={this.closeAllPopups} onAddPlace={this.handleAddPlace} />\n\n                {/* Popup Delete Form */}\n                <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={this.closeAllPopups} />\n\n                {/* Image Popup */}\n                <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups} />\n\n            </CurrentUserContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}