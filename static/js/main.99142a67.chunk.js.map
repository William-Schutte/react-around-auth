{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","owner","card","_id","cardDeleteButtonClasses","isLiked","likes","some","i","cardLikeButtonClasses","style","backgroundImage","link","onClick","onCardClick","type","aria-label","onCardDelete","name","onCardLike","length","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","key","onClose","Footer","PopupWithForm","isOpen","onSubmit","title","children","btnText","ImagePopup","api","options","this","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","newName","newAbout","method","body","JSON","stringify","newUrl","newLink","cardId","cardData","authorization","EditProfilePopup","useEffect","setName","setDescription","useState","description","e","preventDefault","onUpdateUser","id","value","onChange","target","required","minLength","maxLength","pattern","EditAvatarPopup","avatarUrl","useRef","onUpdateAvatar","current","ref","placeholder","AddPlacePopup","url","setUrl","App","setCurrentUser","getUserInfo","catch","err","console","log","isEditProfileOpen","setIsEditProfileOpen","isAddPlaceOpen","setIsAddPlaceOpen","isEditAvatarOpen","setIsEditAvatarOpen","selectedCard","setSelectedCard","closeAllPopups","setCards","getInitialCards","Provider","exact","path","likeCard","newCards","c","deleteCard","filter","newInfo","patchUserInfo","patchUserPic","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.99142a67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.8f7611ae.svg\";","import React from 'react';\nimport headerLogo from '../images/header-logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Around the U.S. Logo\" />\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Code to check if the card is owned by current user and determine the delete buttons visibility\n    const owner = props.card.owner._id === currentUser._id;\n    const cardDeleteButtonClasses = `card__delete-button ${owner ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`;\n\n    // Checks if the card was liked by the current user\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClasses = `card__fav-button ${isLiked && 'card__fav-button_active'}`;\n    \n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n    function handleDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick} />\n            <button type=\"button\" aria-label=\"Card Delete Button\" className={cardDeleteButtonClasses} onClick={handleDeleteClick}></button>\n            <div className=\"card__overlay\">\n                <h2 className=\"card__name\">{props.card.name}</h2>\n                <div className=\"card__like-column\">\n                    <button type=\"button\" aria-label=\"Card Favorite Button\" className={cardLikeButtonClasses} onClick={handleLikeClick}></button>\n                    <p className=\"card__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction Main(props) {\n\n    // Import of context value from provider\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            {/* Profile section at top of page, contains three buttons for editing profile and cards */}\n            <section className=\"profile\">\n                <button type=\"button\" className=\"profile__pic-button\" onClick={props.onEditAvatar}></button>\n                <div className=\"profile__picture\" style={{ backgroundImage: `url(${currentUser.avatar})` }} alt=\"My Profile Pic\" />\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <p className=\"profile__occupation\">{currentUser.about}</p>\n                </div>\n                <button type=\"button\" aria-label=\"Edit Profile Button\" className=\"profile__edit-button btn-animate\" onClick={props.onEditProfile}></button>\n                <button type=\"button\" aria-label=\"Add Card Button\" className=\"profile__add-button btn-animate\" onClick={props.onAddPlace}></button>\n            </section>\n\n            {/* Image cards section, generated from server response */}\n            <section className=\"cards\">\n                <ul className=\"cards__container\">\n                    {props.cards.map(card => (\n                        <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} onClose={props.onClose} />\n                    ))}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <p className=\"footer__copyright\">&copy;2020 William Schutte. Around the U.S.</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return(\n        <form className={`form ${props.name} ${props.isOpen && (`popup-opened`)}`} name={props.name} onSubmit={props.onSubmit}>\n            <div className=\"form__container\">\n                <h2 className=\"form__title\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"form__save-button btn-animate\">{props.btnText}</button>\n                <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-button btn-animate\" onClick={props.onClose}></button>\n            </div>\n        </form>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n    return (\n        <div className={`picture ${card && (`popup-opened`)}`}>\n            <div className=\"picture__column\">\n                <img className=\"picture__img\" src={card ? card.link : ''} alt={card ? card.name : ''}/>\n                <h2 className=\"picture__title\">{card && card.name}</h2>\n                <button type=\"button\" aria-label=\"Close Picture Button\" className=\"form__exit-button btn-animate\" onClick={onClose}></button>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    getUserInfo() {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout }) {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, about: newAbout })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl }) {\n        return fetch(`${this.options.baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ avatar: newUrl })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards() {\n        return fetch(`${this.options.baseUrl}/cards`, {\n          headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n    \n    addNewCard({ name: newName, link: newLink }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard(cardData, isLiked) {\n        // If the card is already liked by the user, the like is removed, else a like is added\n        if (isLiked) {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"DELETE\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"PUT\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n        \n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    // Hook will load user data and then will \n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    const [name, setName] = React.useState(currentUser.name);\n    const [description, setDescription] = React.useState(currentUser.about);\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({ name: name, about: description });\n        props.onClose();\n    }\n\n    return (\n        <PopupWithForm name=\"form-edit\" title=\"Edit profile\" isOpen={props.isOpen} btnText=\"Save\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"text\" value={name} onChange={handleName} required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-z -]*\" />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-occupation\" name=\"secondary\" className=\"form__occupation form__input secondary\" type=\"text\" value={description} onChange={handleDescription} required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"form-occupation-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction EditAvatarPopup(props) {\n\n    // Import of context value from provider\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Ref refers to input field DOM node\n    const avatarUrl = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({ avatar: avatarUrl.current.value });\n        props.onClose();\n        avatarUrl.current.value = null;\n    }\n\n    return (\n        <PopupWithForm name=\"form-pic\" title=\"Change userpic\" isOpen={props.isOpen} btnText=\"Save\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input ref={avatarUrl} id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"url\" placeholder={currentUser.avatar} required />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n\n    const [name, setName] = React.useState(null);\n    const [url, setUrl] = React.useState(null);\n    \n    function handleName(e) {\n        setName(e.target.value);\n    }\n\n    function handleUrl(e) {\n        setUrl(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({ name: name, link: url });\n        props.onClose();\n    }\n\n    return (\n        <PopupWithForm name=\"form-add\" title=\"New place\" isOpen={props.isOpen} btnText=\"Create\" onClose={props.onClose} onSubmit={handleSubmit}>\n            <label className=\"form__input-field\">\n                <input id=\"form-place\" name=\"primary\" className=\"form__place form__input\" type=\"text\" placeholder=\"Title\" value={name} onChange={handleName} required minLength=\"1\" maxLength=\"30\" />\n                <span id=\"form-place-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-url\" name=\"secondary\" className=\"form__url form__input\" type=\"url\" placeholder=\"Image link\" value={url} onChange={handleUrl} required />\n                <span id=\"form-url-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport { Route, Switch, NavLink, useRouteMatch, useParams } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\n\nfunction App() {\n\n    // State variable fot the current user's info\n    const [currentUser, setCurrentUser] = React.useState({});\n    // The effect hook with an empty second parameter will update once upon mounting,\n    // i.e. one update after the API call\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((res) => {setCurrentUser(res);})\n            .catch((err) => {console.log(err)});\n    }, []);\n\n\n    // Declaration of three hooks that act as state variables for the visibility of each form\n    const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n    const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false);\n\n    // Selected card hook for state of Image Popup\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    \n    function handleEditAvatarClick() {\n        setIsEditAvatarOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfileOpen(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlaceOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarOpen(false);\n        setIsEditProfileOpen(false);\n        setIsAddPlaceOpen(false);\n        setSelectedCard(null);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleUpdateUser(newInfo) {\n        api.patchUserInfo(newInfo)\n            .then((res) => {setCurrentUser(res)})\n            .catch((err) => {console.log(err)});\n    }\n\n    function handleUpdateAvatar(avatar) {\n        api.patchUserPic(avatar)\n            .then((res) => {setCurrentUser(res)})\n            .catch((err) => {console.log(err)});\n    }\n\n    // Card variables and functions\n\n    // Declaration of hooks that act as state variables for cards\n    const [cards, setCards] = React.useState([]);\n\n    // Effect hook for updating of user info and cards\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((res) => {setCards(res);})\n            .catch((err) => {console.log(err)});\n    }, []);\n    \n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.likeCard(card, isLiked)\n            .then((res) => {\n                const newCards = cards.map((c) => c._id === card._id ? res : c);\n                setCards(newCards);\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            });\n    }\n\n    function handleAddPlace(card) {\n        api.addNewCard(card)\n            .then((res) => {\n                const newCards = [...cards, res];\n                setCards(newCards);\n            });\n    }\n    \n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            {/* Header section */}\n            <Header />\n\n            <Switch>\n                <Route exact path='/'>\n                    {/* Main content */}\n                    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} \n                        onCardClick={handleCardClick} onClose={closeAllPopups} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n\n                    {/* Footer section */}\n                    <Footer />\n\n                    {/* Popup Edit User Info Form */}\n                    <EditProfilePopup isOpen={isEditProfileOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n                    {/* Popup Edit User Pic Form */}\n                    <EditAvatarPopup isOpen={isEditAvatarOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n                    {/* Popup Add Form */}\n                    <AddPlacePopup isOpen={isAddPlaceOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace}/>\n\n                    {/* Popup Delete Form */}\n                    <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={closeAllPopups} />\n\n                    {/* Image Popup */}\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                </Route>\n            </Switch>\n            \n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}